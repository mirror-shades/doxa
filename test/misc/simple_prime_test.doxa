// Simple prime test to verify our scope fix works
function is_prime(n :: int) returns(tetra) {
    if n < 2 then return false;
    if n equals 2 then return true;
    if n % 2 equals 0 then return false;
    
    var i is 3;
    while i * i <= n {
        if n % i equals 0 then return false;
        i += 2;
    }
    
    return true;
}

// Test a few small numbers
"Testing is_prime function:"?;

"is_prime(1):"?;
is_prime(1)?;  // false

"is_prime(2):"?;
is_prime(2)?;  // true

"is_prime(3):"?;
is_prime(3)?;  // true

"is_prime(4):"?;
is_prime(4)?;  // false

"is_prime(17):"?;
is_prime(17)?;  // true

"is_prime(25):"?;
is_prime(25)?;  // false

"Simple prime test completed successfully!"?; 