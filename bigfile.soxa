; SOXA HIR v0.1.0
; Source-Hash: 000198e3de18c233
; Compiler-Version: 0.1.0-dev
; Build-Flags: debug
; Generated with 1237 instructions, 237 constants, 20 functions

.constants
    const_0: int 255
    const_1: int 15
    const_2: int 66
    const_3: int 1000
    const_4: int 2
    const_5: int 60
    const_6: string "Color"
    const_7: enum_variant Color.Blue
    const_8: enum_variant Color.Green
    const_9: enum_variant Color.Red
    const_10: enum_variant Color.Blue
    const_11: string "It's red"
    const_12: string "It's blue"
    const_13: string "It's something else"
    const_14: enum_variant Color.Red
    const_15: enum_variant Color.Blue
    const_16: string "It's red"
    const_17: string "It's blue"
    const_18: string "It's something else"
    const_19: int 100
    const_20: int 115
    const_21: int 1000
    const_22: int 1015
    const_23: int 5
    const_24: tetra 1
    const_25: int 10
    const_26: int 5
    const_27: string "true"
    const_28: string "false"
    const_29: tetra 0
    const_30: int 10
    const_31: int 5
    const_32: string "true"
    const_33: string "false"
    const_34: int 0
    const_35: string "hello"
    const_36: int 1
    const_37: string "world"
    const_38: int 2
    const_39: string "foo"
    const_40: int 3
    const_41: string "bar"
    const_42: int 0
    const_43: int 1
    const_44: nothing
    const_45: int 10
    const_46: string "int"
    const_47: int 0
    const_48: string "int"
    const_49: int 0
    const_50: int 20
    const_51: string "int"
    const_52: int 0
    const_53: int 10
    const_54: int 20
    const_55: string "float"
    const_56: float 0
    const_57: float 40
    const_58: string "int"
    const_59: int 30
    const_60: int 40
    const_61: int 20
    const_62: int 30
    const_63: int 17
    const_64: string "int"
    const_65: string "failure"
    const_66: nothing
    const_67: nothing
    const_68: int 1000
    const_69: string "salary"
    const_70: int 25
    const_71: string "age"
    const_72: string "Mike"
    const_73: string "name"
    const_74: string "person"
    const_75: int 26
    const_76: int 0
    const_77: int 0
    const_78: tetra 1
    const_79: tetra 0
    const_80: tetra 2
    const_81: tetra 3
    const_82: tetra 2
    const_83: tetra 1
    const_84: tetra 2
    const_85: tetra 0
    const_86: tetra 3
    const_87: tetra 1
    const_88: tetra 3
    const_89: tetra 0
    const_90: tetra 1
    const_91: tetra 0
    const_92: tetra 2
    const_93: tetra 3
    const_94: int 0
    const_95: int 111111
    const_96: int 1
    const_97: int 222222
    const_98: int 2
    const_99: int 333333
    const_100: int 3
    const_101: int 444444
    const_102: int 4
    const_103: int 555555
    const_104: int 3
    const_105: int 3
    const_106: int 666666
    const_107: int 3
    const_108: int 420000
    const_109: int 5
    const_110: int 333333
    const_111: int 0
    const_112: int 9
    const_113: int 0
    const_114: int 9
    const_115: int 0
    const_116: int 9
    const_117: int 0
    const_118: int 9
    const_119: int 0
    const_120: int 9
    const_121: tetra 1
    const_122: string "true"
    const_123: string "false"
    const_124: int 777
    const_125: int 2
    const_126: int 777
    const_127: int 5
    const_128: int 3
    const_129: float 3.5
    const_130: string "int"
    const_131: int 0
    const_132: string "float"
    const_133: int 0
    const_134: string "c"
    const_135: float 3.5
    const_136: string "b"
    const_137: float 2.5
    const_138: string "a"
    const_139: float 1.5
    const_140: string "a"
    const_141: string "c"
    const_142: tetra 0
    const_143: tetra 0
    const_144: tetra 1
    const_145: tetra 1
    const_146: tetra 1
    const_147: tetra 0
    const_148: tetra 1
    const_149: tetra 0
    const_150: tetra 1
    const_151: tetra 0
    const_152: tetra 1
    const_153: tetra 0
    const_154: tetra 1
    const_155: tetra 0
    const_156: tetra 1
    const_157: int 0
    const_158: float 0
    const_159: byte 0
    const_160: tetra 0
    const_161: string ""
    const_162: int 5
    const_163: string "int"
    const_164: byte 255
    const_165: string "byte"
    const_166: float 5.5
    const_167: string "float"
    const_168: string "hello"
    const_169: string "string"
    const_170: tetra 2
    const_171: string "tetra"
    const_172: string "array"
    const_173: string "struct"
    const_174: string "Employee"
    const_175: string "enum"
    const_176: string "Color"
    const_177: string "map"
    const_178: int 3
    const_179: int 0
    const_180: int 5
    const_181: int 0
    const_182: string "fizzbuzz"
    const_183: int 3
    const_184: int 0
    const_185: string "fizz"
    const_186: int 5
    const_187: int 0
    const_188: string "buzz"
    const_189: int 1
    const_190: nothing
    const_191: nothing
    const_192: int 3
    const_193: int 0
    const_194: int 5
    const_195: int 0
    const_196: string "fizzbuzzer"
    const_197: int 3
    const_198: int 0
    const_199: string "fizzer"
    const_200: int 5
    const_201: int 0
    const_202: string "buzzer"
    const_203: int 1
    const_204: nothing
    const_205: int 0
    const_206: int 10
    const_207: int 66
    const_208: nothing
    const_209: int 1
    const_210: nothing
    const_211: string "return"
    const_212: string "implicit"
    const_213: string "implicit"
    const_214: string "I am alive"
    const_215: nothing
    const_216: string "I am dead"
    const_217: nothing
    const_218: string "int"
    const_219: string "float"
    const_220: string "integer"
    const_221: string "float"
    const_222: string "int"
    const_223: string "float"
    const_224: int 0
    const_225: string "int"
    const_226: int 0
    const_227: string "Overflow"
    const_228: nothing
    const_229: int 0
    const_230: int 0
    const_231: string "Underflow"
    const_232: nothing
    const_233: string "imported function"
    const_234: int 100
    const_235: int 100
    const_236: string "imported function"

.functions
    fizzbuzz(2 args) -> Nothing
        entry: func_fizzbuzz_0
    fber(2 args) -> Nothing
        entry: func_fber_1
    forloop(1 args) -> Nothing
        entry: func_forloop_2
    onlyUsesInt(1 args) -> Nothing
        entry: func_onlyUsesInt_3
    return_test(0 args) -> String
        entry: func_return_test_4
    implicit_return_test(0 args) -> String
        entry: func_implicit_return_test_5
    living(1 args) -> Nothing
        entry: func_living_6
    foo(2 args) -> Int
        entry: func_foo_7
    process_number_union_string(1 args) -> String
        entry: func_process_number_union_string_8
    process_number_union_narrow(1 args) -> Int
        entry: func_process_number_union_narrow_9
    process_number_union_int(1 args) -> Int
        entry: func_process_number_union_int_10
    process_number_union_return_union(1 args) -> Int
        entry: func_process_number_union_return_union_11
    safeMath.safeAdd(2 args) -> Int
        entry: func_safeMath.safeAdd_12
    math.add(2 args) -> Int
        entry: func_math.add_13
    import.imported_function(0 args) -> Nothing
        entry: func_import.imported_function_14
    import.imported_function_input(1 args) -> Nothing
        entry: func_import.imported_function_input_15
    import.imported_function_output(0 args) -> Int
        entry: func_import.imported_function_output_16
    imported_function_output(0 args) -> Int
        entry: func_imported_function_output_17
    imported_function(0 args) -> Nothing
        entry: func_imported_function_18
    imported_function_input(1 args) -> Nothing
        entry: func_imported_function_input_19

.code
    Const 0                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 0 "limit"        ; Store constant
    Const 1                    ; Push constant
    Const 2                    ; Push constant
    Call 0 2 "safeMath.safeAdd" ModuleFunction      ; Function call
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 1 "import1"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "import1" Int @./test/misc/bigfile.doxa:10:9         ; Debug print
    Pop                         ; Remove top value
    Const 3                    ; Push constant
    Const 4                    ; Push constant
    Call 0 2 "safeMath.safeAdd" ModuleFunction      ; Function call
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 2 "import2"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "import2" Int @./test/misc/bigfile.doxa:12:9         ; Debug print
    Pop                         ; Remove top value
    Call 18 0 "imported_function" LocalFunction      ; Function call
    Const 5                    ; Push constant
    Call 19 1 "imported_function_input" LocalFunction      ; Function call
    Call 17 0 "imported_function_output" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:20:28         ; Debug print
    Pop                         ; Remove top value
    Const 6                    ; Push constant
    StoreConst 3 "Color"        ; Store constant
    Const 7                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 4 "b"        ; Store constant
    Const 8                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 5 "g"        ; Store constant
    LoadVar 4 "b"           ; Load variable
    Dup                         ; Duplicate top value
    Const 9                    ; Push constant
    Compare Eq Enum                 ; Comparison
    JumpCond match_case_21 match_check_23            ; Conditional jump
match_check_23:                            ; Label
    Dup                         ; Duplicate top value
    Const 10                    ; Push constant
    Compare Eq Enum                 ; Comparison
    JumpCond match_case_22 match_check_25            ; Conditional jump
match_check_25:                            ; Label
    Jump match_case_24                    ; Unconditional jump
match_case_21:                            ; Label
    Pop                         ; Remove top value
    Const 11                    ; Push constant
    Jump match_end_20                    ; Unconditional jump
match_case_22:                            ; Label
    Pop                         ; Remove top value
    Const 12                    ; Push constant
    Jump match_end_20                    ; Unconditional jump
match_case_24:                            ; Label
    Pop                         ; Remove top value
    Const 13                    ; Push constant
    Jump match_end_20                    ; Unconditional jump
match_end_20:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 6 "matchResult"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "matchResult" String @./test/misc/bigfile.doxa:40:13         ; Debug print
    Pop                         ; Remove top value
    LoadVar 5 "g"           ; Load variable
    Dup                         ; Duplicate top value
    Const 14                    ; Push constant
    Compare Eq Enum                 ; Comparison
    JumpCond match_case_27 match_check_29            ; Conditional jump
match_check_29:                            ; Label
    Dup                         ; Duplicate top value
    Const 15                    ; Push constant
    Compare Eq Enum                 ; Comparison
    JumpCond match_case_28 match_check_31            ; Conditional jump
match_check_31:                            ; Label
    Jump match_case_30                    ; Unconditional jump
match_case_27:                            ; Label
    Pop                         ; Remove top value
    Const 16                    ; Push constant
    Jump match_end_26                    ; Unconditional jump
match_case_28:                            ; Label
    Pop                         ; Remove top value
    Const 17                    ; Push constant
    Jump match_end_26                    ; Unconditional jump
match_case_30:                            ; Label
    Pop                         ; Remove top value
    Const 18                    ; Push constant
    Jump match_end_26                    ; Unconditional jump
match_end_26:                            ; Label
    Dup                         ; Duplicate top value
    StoreVar 6 "matchResult"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "matchResult" String @./test/misc/bigfile.doxa:48:13         ; Debug print
    Pop                         ; Remove top value
    Const 19                    ; Push constant
    Const 20                    ; Push constant
    Call 0 2 "fizzbuzz" LocalFunction      ; Function call
    Const 21                    ; Push constant
    Const 22                    ; Push constant
    Call 1 2 "fber" LocalFunction      ; Function call
    Const 23                    ; Push constant
    Call 2 1 "forloop" LocalFunction      ; Function call
    Const 24                    ; Push constant
    JumpCond then_34 else_32            ; Conditional jump
then_34:                            ; Label
    Const 25                    ; Push constant
    Const 26                    ; Push constant
    IntArith Add                ; Integer arithmetic
    Dup                         ; Duplicate top value
    StoreVar 7 "notUsed"          ; Store variable
    Const 27                    ; Push constant
    Jump end_if_33                    ; Unconditional jump
else_32:                            ; Label
    Const 28                    ; Push constant
end_if_33:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 8 "mixedBranch1"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "mixedBranch1" String @./test/misc/bigfile.doxa:96:14         ; Debug print
    Pop                         ; Remove top value
    Const 29                    ; Push constant
    JumpCond then_37 else_35            ; Conditional jump
then_37:                            ; Label
    Const 30                    ; Push constant
    Const 31                    ; Push constant
    IntArith Add                ; Integer arithmetic
    Dup                         ; Duplicate top value
    StoreVar 7 "notUsed"          ; Store variable
    Const 32                    ; Push constant
    Jump end_if_36                    ; Unconditional jump
else_35:                            ; Label
    Const 33                    ; Push constant
end_if_36:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 9 "mixedBranch2"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "mixedBranch2" String @./test/misc/bigfile.doxa:103:14         ; Debug print
    Pop                         ; Remove top value
    ArrayNew String 4             ; Create array
    Dup                         ; Duplicate top value
    Const 34                    ; Push constant
    Const 35                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Const 36                    ; Push constant
    Const 37                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Const 38                    ; Push constant
    Const 39                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Const 40                    ; Push constant
    Const 41                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 10 "stringArr"          ; Store variable
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 11 "__fe_arr_foreach_start_38"          ; Store variable
    StringOp Length                 ; String operation
    StoreVar 12 "__fe_len_foreach_start_38"          ; Store variable
    Const 42                    ; Push constant
    StoreVar 13 "index"          ; Store variable
foreach_start_38:                            ; Label
    LoadVar 13 "index"           ; Load variable
    LoadVar 12 "__fe_len_foreach_start_38"           ; Load variable
    Compare Lt Int                 ; Comparison
    JumpCond foreach_body_39 foreach_end_41            ; Conditional jump
foreach_body_39:                            ; Label
    LoadVar 11 "__fe_arr_foreach_start_38"           ; Load variable
    LoadVar 13 "index"           ; Load variable
    ArrayGet true                 ; Get array element
    StoreVar 14 "word"          ; Store variable
    LoadVar 13 "index"           ; Load variable
    Peek "index" Int @./test/misc/bigfile.doxa:108:11         ; Debug print
    Pop                         ; Remove top value
    LoadVar 14 "word"           ; Load variable
    Peek "word" Auto @./test/misc/bigfile.doxa:109:10         ; Debug print
    Pop                         ; Remove top value
foreach_next_40:                            ; Label
    LoadVar 13 "index"           ; Load variable
    Const 43                    ; Push constant
    IntArith Add                ; Integer arithmetic
    StoreVar 13 "index"          ; Store variable
    Jump foreach_start_38                    ; Unconditional jump
foreach_end_41:                            ; Label
    Const 44                    ; Push constant
    Const 45                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 15 "asThenUnion"        ; Store constant
    LoadVar 15 "asThenUnion"           ; Load variable
    Dup                         ; Duplicate top value
    Const 46                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_42 cast_else_43            ; Conditional jump
cast_else_43:                            ; Label
    Pop                         ; Remove top value
    Const 47                    ; Push constant
    Jump cast_end_44                    ; Unconditional jump
cast_ok_42:                            ; Label
cast_end_44:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 16 "asThen"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "asThen" String @./test/misc/bigfile.doxa:115:8         ; Debug print
    Pop                         ; Remove top value
    LoadVar 15 "asThenUnion"           ; Load variable
    Dup                         ; Duplicate top value
    Const 48                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_45 cast_else_46            ; Conditional jump
cast_else_46:                            ; Label
    Pop                         ; Remove top value
    Const 49                    ; Push constant
    Jump cast_end_47                    ; Unconditional jump
cast_ok_45:                            ; Label
    Pop                         ; Remove top value
    Const 50                    ; Push constant
cast_end_47:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 17 "asThen2"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "asThen2" String @./test/misc/bigfile.doxa:119:9         ; Debug print
    Pop                         ; Remove top value
    LoadVar 15 "asThenUnion"           ; Load variable
    Dup                         ; Duplicate top value
    Const 51                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_48 cast_else_49            ; Conditional jump
cast_else_49:                            ; Label
    Pop                         ; Remove top value
    Const 52                    ; Push constant
    Jump cast_end_50                    ; Unconditional jump
cast_ok_48:                            ; Label
    Pop                         ; Remove top value
    Const 53                    ; Push constant
    Const 54                    ; Push constant
    IntArith Add                ; Integer arithmetic
cast_end_50:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 18 "asThen3"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "asThen3" String @./test/misc/bigfile.doxa:123:9         ; Debug print
    Pop                         ; Remove top value
    LoadVar 15 "asThenUnion"           ; Load variable
    Dup                         ; Duplicate top value
    Const 55                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_51 cast_else_52            ; Conditional jump
cast_else_52:                            ; Label
    Pop                         ; Remove top value
    Const 56                    ; Push constant
    Jump cast_end_53                    ; Unconditional jump
cast_ok_51:                            ; Label
    Pop                         ; Remove top value
    Const 57                    ; Push constant
cast_end_53:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 19 "asThen4"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "asThen4" String @./test/misc/bigfile.doxa:127:9         ; Debug print
    Pop                         ; Remove top value
    LoadVar 15 "asThenUnion"           ; Load variable
    Dup                         ; Duplicate top value
    Const 58                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_54 cast_else_55            ; Conditional jump
cast_else_55:                            ; Label
    Pop                         ; Remove top value
    Const 59                    ; Push constant
    Const 60                    ; Push constant
    IntArith Add                ; Integer arithmetic
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 20 "result"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "result" Int @./test/misc/bigfile.doxa:135:12         ; Debug print
    Jump cast_end_56                    ; Unconditional jump
cast_ok_54:                            ; Label
    Pop                         ; Remove top value
    Const 61                    ; Push constant
    Const 62                    ; Push constant
    IntArith Add                ; Integer arithmetic
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 20 "result"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "result" Int @./test/misc/bigfile.doxa:132:12         ; Debug print
cast_end_56:                            ; Label
    Const 63                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 21 "x"        ; Store constant
    LoadVar 21 "x"           ; Load variable
    Dup                         ; Duplicate top value
    Const 64                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_57 cast_else_58            ; Conditional jump
cast_else_58:                            ; Label
    Pop                         ; Remove top value
    Const 65                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:147:45         ; Debug print
    Jump cast_end_59                    ; Unconditional jump
cast_ok_57:                            ; Label
    Pop                         ; Remove top value
    LoadVar 21 "x"           ; Load variable
    Call 3 1 "onlyUsesInt" LocalFunction      ; Function call
cast_end_59:                            ; Label
    Call 4 0 "return_test" LocalFunction      ; Function call
    Peek String @./test/misc/bigfile.doxa:154:15         ; Debug print
    Pop                         ; Remove top value
    Call 5 0 "implicit_return_test" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:161:24         ; Debug print
    Pop                         ; Remove top value
    Const 66                    ; Push constant
    Const 67                    ; Push constant
    Const 68                    ; Push constant
    Const 69                    ; Push constant
    Const 70                    ; Push constant
    Const 71                    ; Push constant
    Const 72                    ; Push constant
    Const 73                    ; Push constant
    StructNew "Person" 2          ; Create struct with 2 fields
    Const 74                    ; Push constant
    StructNew "Employee" 2          ; Create struct with 2 fields
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 22 "mike"          ; Store variable
    Dup                         ; Duplicate top value
    GetField "person"               ; Get field from struct
    Dup                         ; Duplicate top value
    Const 75                    ; Push constant
    SetField "age" Struct 0        ; Set field in struct
    LoadVar 22 "mike"           ; Load variable
    Swap                        ; Swap top two values
    SetField "person" Struct 0        ; Set field in struct
    Dup                         ; Duplicate top value
    StoreVar 22 "mike"          ; Store variable
    Dup                         ; Duplicate top value
    GetField "person"               ; Get field from struct
    GetField "age"               ; Get field from struct
    Peek "mike.person.age" Int @./test/misc/bigfile.doxa:185:17         ; Debug print
    Pop                         ; Remove top value
    LoadVar 22 "mike"           ; Load variable
    GetField "person"               ; Get field from struct
    GetField "name"               ; Get field from struct
    StringOp Length                 ; String operation
    Peek Int @./test/misc/bigfile.doxa:187:27         ; Debug print
    Pop                         ; Remove top value
    LoadVar 22 "mike"           ; Load variable
    GetField "person"               ; Get field from struct
    GetField "name"               ; Get field from struct
    StringOp Bytes                 ; String operation
    Peek Array @./test/misc/bigfile.doxa:189:26         ; Debug print
    Pop                         ; Remove top value
    LoadVar 22 "mike"           ; Load variable
    GetField "person"               ; Get field from struct
    GetField "name"               ; Get field from struct
    Const 76                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek String @./test/misc/bigfile.doxa:191:21         ; Debug print
    Pop                         ; Remove top value
    LoadVar 22 "mike"           ; Load variable
    GetField "person"               ; Get field from struct
    GetField "name"               ; Get field from struct
    StringOp Bytes                 ; String operation
    Const 77                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek String @./test/misc/bigfile.doxa:193:29         ; Debug print
    Pop                         ; Remove top value
    LoadVar 22 "mike"           ; Load variable
    GetField "salary"               ; Get field from struct
    Peek "mike.salary" Int @./test/misc/bigfile.doxa:195:13         ; Debug print
    Pop                         ; Remove top value
    Const 78                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 23 "firstFold"          ; Store variable
    Const 79                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 24 "secondFold"          ; Store variable
    Const 80                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 25 "thirdFold"          ; Store variable
    Const 81                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 26 "fourthFold"          ; Store variable
    LoadVar 23 "firstFold"           ; Load variable
    Peek "firstFold" Tetra @./test/misc/bigfile.doxa:205:11         ; Debug print
    Pop                         ; Remove top value
    LoadVar 24 "secondFold"           ; Load variable
    Peek "secondFold" Tetra @./test/misc/bigfile.doxa:206:12         ; Debug print
    Pop                         ; Remove top value
    LoadVar 25 "thirdFold"           ; Load variable
    Peek "thirdFold" Tetra @./test/misc/bigfile.doxa:207:11         ; Debug print
    Pop                         ; Remove top value
    LoadVar 26 "fourthFold"           ; Load variable
    Peek "fourthFold" Tetra @./test/misc/bigfile.doxa:208:12         ; Debug print
    Pop                         ; Remove top value
    Const 82                    ; Push constant
    Const 83                    ; Push constant
    Compare Eq Int                 ; Comparison
    Dup                         ; Duplicate top value
    JumpCond and_short_circuit_60 and_end_61            ; Conditional jump
and_short_circuit_60:                            ; Label
    Pop                         ; Remove top value
    Const 84                    ; Push constant
    Const 85                    ; Push constant
    Compare Eq Int                 ; Comparison
and_end_61:                            ; Label
    Peek Tetra @./test/misc/bigfile.doxa:211:42         ; Debug print
    Pop                         ; Remove top value
    Const 86                    ; Push constant
    Const 87                    ; Push constant
    Compare Eq Int                 ; Comparison
    Const 88                    ; Push constant
    Const 89                    ; Push constant
    Compare Eq Int                 ; Comparison
    LogicalOp Or                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:213:47         ; Debug print
    Pop                         ; Remove top value
    Const 90                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 27 "Bob"        ; Store constant
    Const 91                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 28 "Shakespere"        ; Store constant
    Const 92                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 29 "zombie"        ; Store constant
    Const 93                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 30 "angel"        ; Store constant
    LoadVar 27 "Bob"           ; Load variable
    Call 6 1 "living" LocalFunction      ; Function call
    LoadVar 28 "Shakespere"           ; Load variable
    Call 6 1 "living" LocalFunction      ; Function call
    LoadVar 29 "zombie"           ; Load variable
    Call 6 1 "living" LocalFunction      ; Function call
    LoadVar 30 "angel"           ; Load variable
    Call 6 1 "living" LocalFunction      ; Function call
    ArrayNew Int 5             ; Create array
    Dup                         ; Duplicate top value
    Const 94                    ; Push constant
    Const 95                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Const 96                    ; Push constant
    Const 97                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Const 98                    ; Push constant
    Const 99                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Const 100                    ; Push constant
    Const 101                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Const 102                    ; Push constant
    Const 103                    ; Push constant
    ArraySet false                 ; Set array element
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 31 "arr"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "arr" Array @./test/misc/bigfile.doxa:236:5         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    Const 104                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek String @./test/misc/bigfile.doxa:237:8         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    Const 105                    ; Push constant
    Const 106                    ; Push constant
    ArraySet true                 ; Set array element
    Dup                         ; Duplicate top value
    StoreVar 31 "arr"          ; Store variable
    Dup                         ; Duplicate top value
    Const 107                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek String @./test/misc/bigfile.doxa:239:8         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    Const 108                    ; Push constant
    ArrayPush Double               ; Push to array
    Dup                         ; Duplicate top value
    StoreVar 31 "arr"          ; Store variable
    Dup                         ; Duplicate top value
    Const 109                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek String @./test/misc/bigfile.doxa:241:8         ; Debug print
    Pop                         ; Remove top value
    Const 110                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 32 "checkAgainst"        ; Store constant
    ArrayNew Int 10             ; Create array
    Dup                         ; Duplicate top value
    StoreVar 33 "initArr"          ; Store variable
    ArrayNew Float 10             ; Create array
    Dup                         ; Duplicate top value
    StoreVar 34 "floatArr"          ; Store variable
    ArrayNew Byte 10             ; Create array
    Dup                         ; Duplicate top value
    StoreVar 35 "byteArr"          ; Store variable
    ArrayNew Tetra 10             ; Create array
    Dup                         ; Duplicate top value
    StoreVar 36 "tetraArr"          ; Store variable
    ArrayNew String 10             ; Create array
    Dup                         ; Duplicate top value
    StoreVar 37 "strArr"          ; Store variable
    LoadVar 33 "initArr"           ; Load variable
    Const 111                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Int @./test/misc/bigfile.doxa:251:12         ; Debug print
    Pop                         ; Remove top value
    LoadVar 33 "initArr"           ; Load variable
    Const 112                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Int @./test/misc/bigfile.doxa:252:12         ; Debug print
    Pop                         ; Remove top value
    LoadVar 34 "floatArr"           ; Load variable
    Const 113                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Float @./test/misc/bigfile.doxa:254:13         ; Debug print
    Pop                         ; Remove top value
    LoadVar 34 "floatArr"           ; Load variable
    Const 114                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Float @./test/misc/bigfile.doxa:255:13         ; Debug print
    Pop                         ; Remove top value
    LoadVar 35 "byteArr"           ; Load variable
    Const 115                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Byte @./test/misc/bigfile.doxa:257:12         ; Debug print
    Pop                         ; Remove top value
    LoadVar 35 "byteArr"           ; Load variable
    Const 116                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Byte @./test/misc/bigfile.doxa:258:12         ; Debug print
    Pop                         ; Remove top value
    LoadVar 36 "tetraArr"           ; Load variable
    Const 117                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Tetra @./test/misc/bigfile.doxa:260:13         ; Debug print
    Pop                         ; Remove top value
    LoadVar 36 "tetraArr"           ; Load variable
    Const 118                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek Tetra @./test/misc/bigfile.doxa:261:13         ; Debug print
    Pop                         ; Remove top value
    LoadVar 37 "strArr"           ; Load variable
    Const 119                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek String @./test/misc/bigfile.doxa:263:11         ; Debug print
    Pop                         ; Remove top value
    LoadVar 37 "strArr"           ; Load variable
    Const 120                    ; Push constant
    ArrayGet true                 ; Get array element
    Peek String @./test/misc/bigfile.doxa:264:11         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    LoadVar 32 "checkAgainst"           ; Load variable
    Call 0 2 "exists_quantifier_gt" BuiltinFunction      ; Function call
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 38 "ex"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "ex" Tetra @./test/misc/bigfile.doxa:270:4         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    LoadVar 32 "checkAgainst"           ; Load variable
    Call 0 2 "forall_quantifier_gt" BuiltinFunction      ; Function call
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 39 "uni"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "uni" Tetra @./test/misc/bigfile.doxa:273:5         ; Debug print
    Pop                         ; Remove top value
    Const 121                    ; Push constant
    JumpCond then_64 else_62            ; Conditional jump
then_64:                            ; Label
    Const 122                    ; Push constant
    Jump end_if_63                    ; Unconditional jump
else_62:                            ; Label
    Const 123                    ; Push constant
end_if_63:                            ; Label
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 40 "condition"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "condition" String @./test/misc/bigfile.doxa:279:11         ; Debug print
    Pop                         ; Remove top value
    Const 124                    ; Push constant
    Const 125                    ; Push constant
    Call 7 2 "foo" LocalFunction      ; Function call
    Peek Int @./test/misc/bigfile.doxa:290:13         ; Debug print
    Pop                         ; Remove top value
    Const 126                    ; Push constant
    Const 127                    ; Push constant
    Call 7 2 "foo" LocalFunction      ; Function call
    Peek Int @./test/misc/bigfile.doxa:291:13         ; Debug print
    Pop                         ; Remove top value
    Const 128                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 41 "un1"        ; Store constant
    Const 129                    ; Push constant
    Dup                         ; Duplicate top value
    StoreConst 42 "un2"        ; Store constant
    LoadVar 41 "un1"           ; Load variable
    Call 8 1 "process_number_union_string" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:307:34         ; Debug print
    Pop                         ; Remove top value
    LoadVar 42 "un2"           ; Load variable
    Call 8 1 "process_number_union_string" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:308:34         ; Debug print
    Pop                         ; Remove top value
    LoadVar 41 "un1"           ; Load variable
    Call 9 1 "process_number_union_narrow" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:317:34         ; Debug print
    Pop                         ; Remove top value
    LoadVar 42 "un2"           ; Load variable
    Call 9 1 "process_number_union_narrow" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:318:34         ; Debug print
    Pop                         ; Remove top value
    LoadVar 41 "un1"           ; Load variable
    Call 10 1 "process_number_union_int" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:324:31         ; Debug print
    Pop                         ; Remove top value
    LoadVar 42 "un2"           ; Load variable
    Call 10 1 "process_number_union_int" LocalFunction      ; Function call
    Peek Auto @./test/misc/bigfile.doxa:325:31         ; Debug print
    Pop                         ; Remove top value
    LoadVar 41 "un1"           ; Load variable
    Call 11 1 "process_number_union_return_union" LocalFunction      ; Function call
    Dup                         ; Duplicate top value
    StoreConst 43 "newun"        ; Store constant
    LoadVar 43 "newun"           ; Load variable
    Dup                         ; Duplicate top value
    Const 130                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_65 cast_else_66            ; Conditional jump
cast_else_66:                            ; Label
    Pop                         ; Remove top value
    Const 131                    ; Push constant
    Jump cast_end_67                    ; Unconditional jump
cast_ok_65:                            ; Label
cast_end_67:                            ; Label
    Dup                         ; Duplicate top value
    StoreConst 44 "resint"        ; Store constant
    LoadVar 43 "newun"           ; Load variable
    Dup                         ; Duplicate top value
    Const 132                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_68 cast_else_69            ; Conditional jump
cast_else_69:                            ; Label
    Pop                         ; Remove top value
    Const 133                    ; Push constant
    Jump cast_end_70                    ; Unconditional jump
cast_ok_68:                            ; Label
cast_end_70:                            ; Label
    Dup                         ; Duplicate top value
    StoreConst 45 "resfloat"        ; Store constant
    LoadVar 44 "resint"           ; Load variable
    Peek "resint" String @./test/misc/bigfile.doxa:336:8         ; Debug print
    Pop                         ; Remove top value
    LoadVar 45 "resfloat"           ; Load variable
    Peek "resfloat" String @./test/misc/bigfile.doxa:337:10         ; Debug print
    Pop                         ; Remove top value
    Const 134                    ; Push constant
    Const 135                    ; Push constant
    Const 136                    ; Push constant
    Const 137                    ; Push constant
    Const 138                    ; Push constant
    Const 139                    ; Push constant
    Map 3 String                   ; Create map with 3 entries
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 46 "Map"          ; Store variable
    Dup                         ; Duplicate top value
    Const 140                    ; Push constant
    MapGet String                   ; Get map value by key
    Peek Int @./test/misc/bigfile.doxa:348:10         ; Debug print
    Pop                         ; Remove top value
    LoadVar 46 "Map"           ; Load variable
    Const 141                    ; Push constant
    MapGet String                   ; Get map value by key
    Peek Int @./test/misc/bigfile.doxa:349:10         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    LoadVar 32 "checkAgainst"           ; Load variable
    Call 0 2 "exists_quantifier_gt" BuiltinFunction      ; Function call
    Peek Tetra @./test/misc/bigfile.doxa:354:35         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    LoadVar 32 "checkAgainst"           ; Load variable
    Call 0 2 "forall_quantifier_gt" BuiltinFunction      ; Function call
    Peek Tetra @./test/misc/bigfile.doxa:355:35         ; Debug print
    Pop                         ; Remove top value
    LoadVar 31 "arr"           ; Load variable
    LoadVar 32 "checkAgainst"           ; Load variable
    Call 0 2 "forall_quantifier_gt" BuiltinFunction      ; Function call
    LogicalOp Not                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:356:37         ; Debug print
    Pop                         ; Remove top value
    Const 142                    ; Push constant
    Const 143                    ; Push constant
    LogicalOp Iff                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:357:19         ; Debug print
    Pop                         ; Remove top value
    Const 144                    ; Push constant
    Const 145                    ; Push constant
    LogicalOp Xor                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:358:17         ; Debug print
    Pop                         ; Remove top value
    Const 146                    ; Push constant
    Dup                         ; Duplicate top value
    JumpCond and_short_circuit_71 and_end_72            ; Conditional jump
and_short_circuit_71:                            ; Label
    Pop                         ; Remove top value
    Const 147                    ; Push constant
and_end_72:                            ; Label
    Peek Tetra @./test/misc/bigfile.doxa:359:18         ; Debug print
    Pop                         ; Remove top value
    Const 148                    ; Push constant
    Const 149                    ; Push constant
    LogicalOp Or                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:360:18         ; Debug print
    Pop                         ; Remove top value
    Const 150                    ; Push constant
    Const 151                    ; Push constant
    LogicalOp Nand                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:361:18         ; Debug print
    Pop                         ; Remove top value
    Const 152                    ; Push constant
    Const 153                    ; Push constant
    LogicalOp Nor                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:362:18         ; Debug print
    Pop                         ; Remove top value
    Const 154                    ; Push constant
    Const 155                    ; Push constant
    LogicalOp Implies                ; Logical operation
    Peek Tetra @./test/misc/bigfile.doxa:363:18         ; Debug print
    Pop                         ; Remove top value
    Const 156                    ; Push constant
    Peek Tetra @./test/misc/bigfile.doxa:371:1         ; Debug print
    Pop                         ; Remove top value
    Const 157                    ; Push constant
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 47 "__int"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "__int" Int @./test/misc/bigfile.doxa:378:7         ; Debug print
    Pop                         ; Remove top value
    Const 158                    ; Push constant
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 48 "__float"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "__float" Float @./test/misc/bigfile.doxa:381:9         ; Debug print
    Pop                         ; Remove top value
    Const 159                    ; Push constant
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 49 "__byte"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "__byte" Byte @./test/misc/bigfile.doxa:384:8         ; Debug print
    Pop                         ; Remove top value
    Const 160                    ; Push constant
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 50 "__tetra"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "__tetra" Tetra @./test/misc/bigfile.doxa:387:9         ; Debug print
    Pop                         ; Remove top value
    Const 161                    ; Push constant
    Dup                         ; Duplicate top value
    Dup                         ; Duplicate top value
    StoreVar 51 "__string"          ; Store variable
    Dup                         ; Duplicate top value
    Peek "__string" String @./test/misc/bigfile.doxa:390:10         ; Debug print
    Pop                         ; Remove top value
    Const 162                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 52 "_int"          ; Store variable
    Const 163                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:394:15         ; Debug print
    Pop                         ; Remove top value
    Const 164                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 53 "_byte"          ; Store variable
    Const 165                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:397:16         ; Debug print
    Pop                         ; Remove top value
    Const 166                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 54 "_float"          ; Store variable
    Const 167                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:400:17         ; Debug print
    Pop                         ; Remove top value
    Const 168                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 55 "_string"          ; Store variable
    Const 169                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:403:18         ; Debug print
    Pop                         ; Remove top value
    Const 170                    ; Push constant
    Dup                         ; Duplicate top value
    StoreVar 56 "_tetra"          ; Store variable
    Const 171                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:406:17         ; Debug print
    Pop                         ; Remove top value
    Const 172                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:408:14         ; Debug print
    Pop                         ; Remove top value
    Const 173                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:410:19         ; Debug print
    Pop                         ; Remove top value
    Const 174                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:411:15         ; Debug print
    Pop                         ; Remove top value
    Const 175                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:413:16         ; Debug print
    Pop                         ; Remove top value
    Const 176                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:414:21         ; Debug print
    Pop                         ; Remove top value
    Const 177                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:416:14         ; Debug print
    Pop                         ; Remove top value
    Halt                        ; Program termination
func_fizzbuzz_0:                            ; Label
    EnterScope 1073 0            ; Enter new scope
    StoreVar 0 "limit"          ; Store variable
    StoreVar 21 "x"          ; Store variable
func_fizzbuzz_body_73:                            ; Label
    LoadVar 21 "x"           ; Load variable
    StoreVar 57 "current"          ; Store variable
while_start_74:                            ; Label
    LoadVar 57 "current"           ; Load variable
    LoadVar 0 "limit"           ; Load variable
    Compare Le Int                 ; Comparison
    JumpCond while_body_75 while_end_76            ; Conditional jump
while_body_75:                            ; Label
    LoadVar 57 "current"           ; Load variable
    Const 178                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 179                    ; Push constant
    Compare Eq Int                 ; Comparison
    Dup                         ; Duplicate top value
    JumpCond and_short_circuit_77 and_end_78            ; Conditional jump
and_short_circuit_77:                            ; Label
    Pop                         ; Remove top value
    LoadVar 57 "current"           ; Load variable
    Const 180                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 181                    ; Push constant
    Compare Eq Int                 ; Comparison
and_end_78:                            ; Label
    JumpCond then_81 else_79            ; Conditional jump
then_81:                            ; Label
    Const 182                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:56:74         ; Debug print
    Jump end_if_80                    ; Unconditional jump
else_79:                            ; Label
    LoadVar 57 "current"           ; Load variable
    Const 183                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 184                    ; Push constant
    Compare Eq Int                 ; Comparison
    JumpCond then_84 else_82            ; Conditional jump
then_84:                            ; Label
    Const 185                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:57:50         ; Debug print
    Jump end_if_83                    ; Unconditional jump
else_82:                            ; Label
    LoadVar 57 "current"           ; Load variable
    Const 186                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 187                    ; Push constant
    Compare Eq Int                 ; Comparison
    JumpCond then_87 else_85            ; Conditional jump
then_87:                            ; Label
    Const 188                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:58:50         ; Debug print
    Jump end_if_86                    ; Unconditional jump
else_85:                            ; Label
    LoadVar 57 "current"           ; Load variable
    Peek "current" Int @./test/misc/bigfile.doxa:59:22         ; Debug print
end_if_86:                            ; Label
end_if_83:                            ; Label
end_if_80:                            ; Label
    LoadVar 57 "current"           ; Load variable
    Const 189                    ; Push constant
    IntArith Add                ; Integer arithmetic
    StoreVar 57 "current"          ; Store variable
    Const 190                    ; Push constant
    Jump while_start_74                    ; Unconditional jump
while_end_76:                            ; Label
    Const 191                    ; Push constant
    ExitScope 1088                ; Exit scope
    Return false                   ; Return from function
func_fber_1:                            ; Label
    EnterScope 1088 0            ; Enter new scope
    StoreVar 0 "limit"          ; Store variable
    StoreVar 21 "x"          ; Store variable
func_fber_body_88:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Const 192                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 193                    ; Push constant
    Compare Eq Int                 ; Comparison
    Dup                         ; Duplicate top value
    JumpCond and_short_circuit_89 and_end_90            ; Conditional jump
and_short_circuit_89:                            ; Label
    Pop                         ; Remove top value
    LoadVar 21 "x"           ; Load variable
    Const 194                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 195                    ; Push constant
    Compare Eq Int                 ; Comparison
and_end_90:                            ; Label
    JumpCond then_93 else_91            ; Conditional jump
then_93:                            ; Label
    Const 196                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:69:60         ; Debug print
    Jump end_if_92                    ; Unconditional jump
else_91:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Const 197                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 198                    ; Push constant
    Compare Eq Int                 ; Comparison
    JumpCond then_96 else_94            ; Conditional jump
then_96:                            ; Label
    Const 199                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:70:42         ; Debug print
    Jump end_if_95                    ; Unconditional jump
else_94:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Const 200                    ; Push constant
    IntArith Mod                ; Integer arithmetic
    Const 201                    ; Push constant
    Compare Eq Int                 ; Comparison
    JumpCond then_99 else_97            ; Conditional jump
then_99:                            ; Label
    Const 202                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:71:42         ; Debug print
    Jump end_if_98                    ; Unconditional jump
else_97:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Peek "x" Int @./test/misc/bigfile.doxa:72:12 ; union [int,float]         ; Debug print
end_if_98:                            ; Label
end_if_95:                            ; Label
end_if_92:                            ; Label
    LoadVar 21 "x"           ; Load variable
    LoadVar 0 "limit"           ; Load variable
    Compare Lt Int                 ; Comparison
    JumpCond then_102 else_100            ; Conditional jump
then_102:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Const 203                    ; Push constant
    IntArith Add                ; Integer arithmetic
    LoadVar 0 "limit"           ; Load variable
    Call 1 2 "fber" LocalFunction      ; Function call
    Jump end_if_101                    ; Unconditional jump
else_100:                            ; Label
    Const 204                    ; Push constant
end_if_101:                            ; Label
    ExitScope 1103                ; Exit scope
    Return false                   ; Return from function
func_forloop_2:                            ; Label
    EnterScope 1103 0            ; Enter new scope
    StoreVar 21 "x"          ; Store variable
func_forloop_body_103:                            ; Label
    Const 205                    ; Push constant
    StoreVar 58 "i"          ; Store variable
for_start_104:                            ; Label
    LoadVar 58 "i"           ; Load variable
    LoadVar 21 "x"           ; Load variable
    Compare Lt Int                 ; Comparison
    JumpCond for_body_105 for_end_107            ; Conditional jump
for_body_105:                            ; Label
    LoadVar 58 "i"           ; Load variable
    Const 206                    ; Push constant
    IntArith Add                ; Integer arithmetic
    Const 207                    ; Push constant
    IntArith Mul                ; Integer arithmetic
    Peek Int @./test/misc/bigfile.doxa:81:21         ; Debug print
    Pop                         ; Remove top value
    Const 208                    ; Push constant
for_increment_106:                            ; Label
    LoadVar 58 "i"           ; Load variable
    Const 209                    ; Push constant
    IntArith Add                ; Integer arithmetic
    StoreVar 58 "i"          ; Store variable
    Jump for_start_104                    ; Unconditional jump
for_end_107:                            ; Label
    Const 210                    ; Push constant
    ExitScope 1108                ; Exit scope
    Return false                   ; Return from function
func_onlyUsesInt_3:                            ; Label
    EnterScope 1108 0            ; Enter new scope
    StoreVar 21 "x"          ; Store variable
func_onlyUsesInt_body_108:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Peek "x" Int @./test/misc/bigfile.doxa:141:7 ; union [int,float]         ; Debug print
    Pop                         ; Remove top value
    Return false                   ; Return from function
    ExitScope 1109                ; Exit scope
func_return_test_4:                            ; Label
    EnterScope 1109 0            ; Enter new scope
func_return_test_body_109:                            ; Label
    Const 211                    ; Push constant
    Return true                   ; Return from function
    ExitScope 1110                ; Exit scope
func_implicit_return_test_5:                            ; Label
    EnterScope 1110 0            ; Enter new scope
func_implicit_return_test_body_110:                            ; Label
    Const 212                    ; Push constant
    ExitScope 1111                ; Exit scope
    Const 213                    ; Push constant
    Return true                   ; Return from function
func_living_6:                            ; Label
    EnterScope 1111 0            ; Enter new scope
    StoreVar 59 "alive"          ; Store variable
func_living_body_111:                            ; Label
    LoadVar 59 "alive"           ; Load variable
    JumpCond then_114 else_112            ; Conditional jump
then_114:                            ; Label
    Const 214                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:221:32         ; Debug print
    Jump end_if_113                    ; Unconditional jump
else_112:                            ; Label
    Const 215                    ; Push constant
end_if_113:                            ; Label
    LoadVar 59 "alive"           ; Load variable
    LogicalOp Not                ; Logical operation
    JumpCond then_117 else_115            ; Conditional jump
then_117:                            ; Label
    Const 216                    ; Push constant
    Peek String @./test/misc/bigfile.doxa:222:35         ; Debug print
    Jump end_if_116                    ; Unconditional jump
else_115:                            ; Label
    Const 217                    ; Push constant
end_if_116:                            ; Label
    ExitScope 1118                ; Exit scope
    Return false                   ; Return from function
func_foo_7:                            ; Label
    EnterScope 1118 0            ; Enter new scope
    StoreVar 4 "b"          ; Store variable
    StoreVar 60 "a"          ; Store variable
func_foo_body_118:                            ; Label
    LoadVar 60 "a"           ; Load variable
    LoadVar 4 "b"           ; Load variable
    IntArith Add                ; Integer arithmetic
    Return true                   ; Return from function
    ExitScope 1119                ; Exit scope
func_process_number_union_string_8:                            ; Label
    EnterScope 1119 0            ; Enter new scope
    StoreVar 61 "value"          ; Store variable
func_process_number_union_string_body_119:                            ; Label
    LoadVar 61 "value"           ; Load variable
    Dup                         ; Duplicate top value
    Const 218                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond match_case_121 match_check_123            ; Conditional jump
match_check_123:                            ; Label
    Dup                         ; Duplicate top value
    Const 219                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond match_case_122 match_end_120            ; Conditional jump
match_case_121:                            ; Label
    Pop                         ; Remove top value
    Const 220                    ; Push constant
    Jump match_end_120                    ; Unconditional jump
match_case_122:                            ; Label
    Pop                         ; Remove top value
    Const 221                    ; Push constant
    Jump match_end_120                    ; Unconditional jump
match_end_120:                            ; Label
    Return true                   ; Return from function
    ExitScope 1124                ; Exit scope
func_process_number_union_narrow_9:                            ; Label
    EnterScope 1124 0            ; Enter new scope
    StoreVar 61 "value"          ; Store variable
func_process_number_union_narrow_body_124:                            ; Label
    LoadVar 61 "value"           ; Load variable
    Dup                         ; Duplicate top value
    Const 222                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond match_case_126 match_check_128            ; Conditional jump
match_check_128:                            ; Label
    Dup                         ; Duplicate top value
    Const 223                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond match_case_127 match_end_125            ; Conditional jump
match_case_126:                            ; Label
    Pop                         ; Remove top value
    LoadVar 61 "value"           ; Load variable
    Jump match_end_125                    ; Unconditional jump
match_case_127:                            ; Label
    Pop                         ; Remove top value
    Const 224                    ; Push constant
    Jump match_end_125                    ; Unconditional jump
match_end_125:                            ; Label
    Return true                   ; Return from function
    ExitScope 1129                ; Exit scope
func_process_number_union_int_10:                            ; Label
    EnterScope 1129 0            ; Enter new scope
    StoreVar 61 "value"          ; Store variable
func_process_number_union_int_body_129:                            ; Label
    LoadVar 61 "value"           ; Load variable
    Dup                         ; Duplicate top value
    Const 225                    ; Push constant
    Compare Eq String                 ; Comparison
    JumpCond cast_ok_130 cast_else_131            ; Conditional jump
cast_else_131:                            ; Label
    Pop                         ; Remove top value
    Const 226                    ; Push constant
    Jump cast_end_132                    ; Unconditional jump
cast_ok_130:                            ; Label
cast_end_132:                            ; Label
    Return true                   ; Return from function
    ExitScope 1133                ; Exit scope
func_process_number_union_return_union_11:                            ; Label
    EnterScope 1133 0            ; Enter new scope
    StoreVar 61 "value"          ; Store variable
func_process_number_union_return_union_body_133:                            ; Label
    LoadVar 61 "value"           ; Load variable
    Return true                   ; Return from function
    ExitScope 1134                ; Exit scope
func_safeMath.safeAdd_12:                            ; Label
    EnterScope 1134 0            ; Enter new scope
    StoreVar 4 "b"          ; Store variable
    StoreVar 60 "a"          ; Store variable
func_safeMath.safeAdd_body_134:                            ; Label
    LoadVar 60 "a"           ; Load variable
    LoadVar 0 "limit"           ; Load variable
    Compare Gt Int                 ; Comparison
    LoadVar 4 "b"           ; Load variable
    LoadVar 0 "limit"           ; Load variable
    Compare Gt Int                 ; Comparison
    LogicalOp Or                ; Logical operation
    JumpCond then_137 else_135            ; Conditional jump
then_137:                            ; Label
    Const 227                    ; Push constant
    Peek String @./safeMath.doxa:7:20         ; Debug print
    Jump end_if_136                    ; Unconditional jump
else_135:                            ; Label
    Const 228                    ; Push constant
end_if_136:                            ; Label
    LoadVar 60 "a"           ; Load variable
    Const 229                    ; Push constant
    Compare Lt Int                 ; Comparison
    LoadVar 4 "b"           ; Load variable
    Const 230                    ; Push constant
    Compare Lt Int                 ; Comparison
    LogicalOp Or                ; Logical operation
    JumpCond then_140 else_138            ; Conditional jump
then_140:                            ; Label
    Const 231                    ; Push constant
    Peek String @./safeMath.doxa:12:21         ; Debug print
    Jump end_if_139                    ; Unconditional jump
else_138:                            ; Label
    Const 232                    ; Push constant
end_if_139:                            ; Label
    LoadVar 60 "a"           ; Load variable
    LoadVar 4 "b"           ; Load variable
    Call 13 2 "math.add" LocalFunction      ; Function call
    Return true                   ; Return from function
    ExitScope 1141                ; Exit scope
func_math.add_13:                            ; Label
    EnterScope 1141 0            ; Enter new scope
    StoreVar 4 "b"          ; Store variable
    StoreVar 60 "a"          ; Store variable
func_math.add_body_141:                            ; Label
    LoadVar 60 "a"           ; Load variable
    LoadVar 4 "b"           ; Load variable
    IntArith Add                ; Integer arithmetic
    Return true                   ; Return from function
    ExitScope 1142                ; Exit scope
func_import.imported_function_14:                            ; Label
    EnterScope 1142 0            ; Enter new scope
func_import.imported_function_body_142:                            ; Label
    Const 233                    ; Push constant
    Peek String @./import.doxa:2:25         ; Debug print
    Pop                         ; Remove top value
    Return false                   ; Return from function
    ExitScope 1143                ; Exit scope
func_import.imported_function_input_15:                            ; Label
    EnterScope 1143 0            ; Enter new scope
    StoreVar 21 "x"          ; Store variable
func_import.imported_function_input_body_143:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Peek "x" Int @./import.doxa:7:7 ; union [int,float]         ; Debug print
    Pop                         ; Remove top value
    Return false                   ; Return from function
    ExitScope 1144                ; Exit scope
func_import.imported_function_output_16:                            ; Label
    EnterScope 1144 0            ; Enter new scope
func_import.imported_function_output_body_144:                            ; Label
    Const 234                    ; Push constant
    Return true                   ; Return from function
    ExitScope 1145                ; Exit scope
func_imported_function_output_17:                            ; Label
    EnterScope 1145 0            ; Enter new scope
func_imported_function_output_body_145:                            ; Label
    Const 235                    ; Push constant
    Return true                   ; Return from function
    ExitScope 1146                ; Exit scope
func_imported_function_18:                            ; Label
    EnterScope 1146 0            ; Enter new scope
func_imported_function_body_146:                            ; Label
    Const 236                    ; Push constant
    Peek String @./import.doxa:2:25         ; Debug print
    Pop                         ; Remove top value
    Return false                   ; Return from function
    ExitScope 1147                ; Exit scope
func_imported_function_input_19:                            ; Label
    EnterScope 1147 0            ; Enter new scope
    StoreVar 21 "x"          ; Store variable
func_imported_function_input_body_147:                            ; Label
    LoadVar 21 "x"           ; Load variable
    Peek "x" Int @./import.doxa:7:7 ; union [int,float]         ; Debug print
    Pop                         ; Remove top value
    Return false                   ; Return from function
    ExitScope 1148                ; Exit scope
