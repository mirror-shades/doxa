[CompileTime][Error][E2004] ./test_simple.doxa:3:16: equals sign '=' is not used for variable declarations, use 'is' instead
[CompileTime][Error][E1001] ./test_simple.doxa:4:30: Undefined variable
[CompileTime][Error][E6001] ./test_simple.doxa:4:30: Cannot call array method 'pop' on non-array type Nothing
[CompileTime][Error][E6001] ./test_simple.doxa:4:30: Cannot call array method 'pop' on non-array type Nothing
[CompileTime][Error][E6001] ./test_simple.doxa:4:30: Cannot call array method 'pop' on non-array type Nothing
[CompileTime][Error][E1001] ./test_simple.doxa:4:15: Undefined variable
[CompileTime][Error][E6001] ./test_simple.doxa:4:15: Cannot call length on non-array/string type Nothing
[CompileTime][Error][E1016] ./test_simple.doxa:4:26: Cannot compare Nothing with Int
[CompileTime][Error][E1017] ./test_simple.doxa:10:1: While condition must be tetra, got Nothing
[CompileTime][Error][E1001] ./test_simple.doxa:5:9: Undefined variable
[CompileTime][Error][E1001] ./test_simple.doxa:5:24: Undefined variable
[CompileTime][Error][E1001] ./test_simple.doxa:6:9: Undefined variable
[CompileTime][Error][E5002] ./test_simple.doxa:6:17: Cannot call non-function type Nothing
[CompileTime][Error][E1001] ./test_simple.doxa:6:9: Undefined variable
[CompileTime][Error][E5002] ./test_simple.doxa:6:17: Cannot call non-function type Nothing
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_simple.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_simple.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_simple.doxa -> out/test_simple.soxa (32 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 32 instructions, 10 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=while_end_2
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 29 (label: while_end_2)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_simple.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_simple.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_simple.doxa -> out/test_simple.soxa (32 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 32 instructions, 10 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=while_end_2
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 29 (label: while_end_2)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_simple.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_simple.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_simple.doxa -> out/test_simple.soxa (32 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 32 instructions, 10 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=while_end_2
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 29 (label: while_end_2)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_simple.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_simple.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_simple.doxa -> out/test_simple.soxa (32 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 32 instructions, 10 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=while_end_2
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 29 (label: while_end_2)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_debug.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_debug.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable x has type base: Int
[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_debug.doxa -> out/test_debug.soxa (19 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 19 instructions, 4 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) x: storage_id=1, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_0
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 13 (label: else_0)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 120, 32, 105, 115, 32, 110, 111, 116, 32, 103, 114, 101, 97, 116, 101, 114, 32, 116, 104, 97, 110, 32, 53 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_detailed.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_detailed.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_2
[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_detailed.doxa -> out/test_detailed.soxa (45 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 45 instructions, 11 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: else_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 37 at IP 37: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 97, 98, 111, 117, 116, 32, 116, 111, 32, 98, 114, 101, 97, 107 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 38 at IP 38: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 42 at IP 42: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 43 at IP 43: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 44 at IP 44: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_no_parens.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_no_parens.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4042:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_no_parens.doxa -> out/test_no_parens.soxa (32 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 32 instructions, 10 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=while_end_2
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 29 (label: while_end_2)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_simple.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_simple.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_2
[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_simple.doxa -> out/test_simple.soxa (42 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 42 instructions, 10 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: else_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 40 at IP 40: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 41 at IP 41: Halt
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_simple.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_simple.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable arr has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_2
[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 0 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_simple.doxa -> out/test_simple.soxa (45 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 45 instructions, 11 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) arr: storage_id=1, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_1
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 22 (label: while_body_1)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: else_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 37 at IP 37: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 97, 98, 111, 117, 116, 32, 116, 111, 32, 98, 114, 101, 97, 107, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 38 at IP 38: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 42 at IP 42: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 43 at IP 43: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 44 at IP 44: Halt
[CompileTime][Error][E1003] ./test.doxa:53:54: Cannot use + operator between String and Custom. Both operands must be the same type.
[CompileTime][Error][E1003] ./test.doxa:53:69: Cannot use + operator between Nothing and String. Both operands must be the same type.
[CompileTime][Error][E1003] ./test.doxa:53:54: Cannot use + operator between Int and String
[CompileTime][Error][E1003] ./test.doxa:53:41: Cannot use + operator between String and Enum
[CompileTime][Error][E1003] ./test.doxa:53:41: Cannot use + operator between String and Enum
[CompileTime][Error][E1001] ./test.doxa:60:13: Undefined variable
[Runtime][Error][E1001] Undefined variable: prec
[Runtime][Error][E1001] Undefined variable: prec
[Runtime][Error][E1001] Undefined variable: prec
[CompileTime][Error][E1003] ./test_simple.doxa:4:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:5:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:6:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:7:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:8:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:9:23: Type mismatch: expected String, got Int
[CompileTime][Error][E1001] ./test_simple.doxa:11:12: Undefined variable
[CompileTime][Error][E1003] ./test_simple.doxa:12:1: Type mismatch: expected Int, got Nothing
[Runtime][Error][E1001] Undefined variable: re
[CompileTime][Error][E1003] ./test_simple.doxa:4:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:5:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:6:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:7:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:8:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:9:23: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:12:1: Type mismatch: expected Int, got String
[CompileTime][Error][E1003] ./test_simple.doxa:4:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:5:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:6:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:7:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:8:26: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:9:23: Type mismatch: expected String, got Int
[CompileTime][Error][E1003] ./test_simple.doxa:12:1: Type mismatch: expected Int, got String
[CompileTime][Error][E1016] ./test_simple.doxa:3:16: Cannot compare String with Int
[CompileTime][Error][E1017] ./test_simple.doxa:15:5: While condition must be tetra, got Nothing
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E1003] ./test_simple.doxa:13:34: Cannot use + operator between String and Nothing. Both operands must be the same type.
[CompileTime][Error][E1003] ./test_simple.doxa:13:38: Cannot use + operator between Nothing and String. Both operands must be the same type.
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[CompileTime][Error][E6001] ./test_simple.doxa:4:23: Cannot call array method 'pop' on non-array type String
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test_simple.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test_simple.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:1835:0: Checking union members for variable x
[Debug][Hint] codegen/hir/soxa_generator.zig:1851:0: No union members found for x
[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:4046:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1231:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 2 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test_simple.doxa -> out/test_simple.soxa (124 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 124 instructions, 27 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 4 at IP 4: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 5 at IP 5: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 6 at IP 6: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 7 at IP 7: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 8 at IP 8: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 9 at IP 9: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 10 at IP 10: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 11 at IP 11: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 12 at IP 12: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 13 at IP 13: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 14 at IP 14: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 15 at IP 15: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 16 at IP 16: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 17 at IP 17: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 18 at IP 18: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 19 at IP 19: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 20 at IP 20: ArraySet
[Debug][Hint] interpreter/vm.zig:2045:0: ArraySet: array element_type=String, trying to assign value type=string
[Debug][Hint] interpreter/vm.zig:2075:0: ArraySet: keeping value as-is for type String
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 21 at IP 21: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 23 at IP 23: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 24 at IP 24: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 25 at IP 25: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) op: storage_id=5, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 26 at IP 26: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 27 at IP 27: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 28 at IP 28: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) list: storage_id=6, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 32 at IP 32: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 33 at IP 33: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 34 at IP 34: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: while_body_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 37 at IP 37: ArrayPop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 38 at IP 38: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar list: storage_id=6, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 40 at IP 40: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 41 at IP 41: StoreVar
[Debug][Hint] interpreter/vm.zig:994:0: DBG WRITE StoreVar (create) x: storage_id=7, value=types.types.TokenLiteral{ .string = { 47 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 42 at IP 42: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 43 at IP 43: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 44 at IP 44: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 45 at IP 45: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '/' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 46 at IP 46: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_8
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 47 (label: match_check_8)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 47 at IP 47: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 48 at IP 48: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 49 at IP 49: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 50 at IP 50: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '/' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 51 at IP 51: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_10
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 52 (label: match_check_10)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 52 at IP 52: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 53 at IP 53: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 54 at IP 54: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 55 at IP 55: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '/' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 56 at IP 56: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_12
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 57 (label: match_check_12)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 57 at IP 57: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 58 at IP 58: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 59 at IP 59: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 60 at IP 60: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '/' and '/', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 61 at IP 61: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=match_case_11
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 76 (label: match_case_11)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 76 at IP 76: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 77 at IP 77: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 78 at IP 78: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 79 at IP 79: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 84 at IP 84: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 85 at IP 85: StoreConst
[Debug][Hint] interpreter/vm.zig:1061:0: DBG WRITE StoreConst (create) res: storage_id=8, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 86 at IP 86: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 90 at IP 90: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 91 at IP 91: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 92 at IP 92: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 93 at IP 93: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 94 at IP 94: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 10, 116, 104, 101, 32, 108, 105, 115, 116, 32, 105, 115, 58, 32, 91, 42, 44, 32, 43, 44, 32, 45, 44, 32, 61, 93, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 95 at IP 95: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 96 at IP 96: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 97 at IP 97: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 98 at IP 98: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 99 at IP 99: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 100 at IP 100: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 101 at IP 101: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 102 at IP 102: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 103 at IP 103: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 104 at IP 104: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 111, 112, 112, 101, 100, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 47, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 105 at IP 105: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 106 at IP 106: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 107 at IP 107: Peek
[Debug][Hint] interpreter/vm.zig:1356:0: Peek called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 47 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:1367:0: Peek instruction for variable x
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 108 at IP 108: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 109 at IP 109: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 110 at IP 110: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 111 at IP 111: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 112 at IP 112: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 113 at IP 113: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 114 at IP 114: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 115 at IP 115: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 116 at IP 116: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 117 at IP 117: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 114, 101, 99, 101, 100, 101, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 50, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 118 at IP 118: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 119 at IP 119: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 32 at IP 32: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 33 at IP 33: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 4 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 34 at IP 34: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: while_body_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 37 at IP 37: ArrayPop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 38 at IP 38: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar list: storage_id=6, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 40 at IP 40: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 41 at IP 41: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar x: storage_id=7, value=types.types.TokenLiteral{ .string = { 61 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 42 at IP 42: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 43 at IP 43: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 44 at IP 44: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 45 at IP 45: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 61 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '=' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 46 at IP 46: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_8
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 47 (label: match_check_8)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 47 at IP 47: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 48 at IP 48: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 49 at IP 49: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 50 at IP 50: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 61 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '=' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 51 at IP 51: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_10
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 52 (label: match_check_10)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 52 at IP 52: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 53 at IP 53: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 54 at IP 54: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 55 at IP 55: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 61 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '=' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 56 at IP 56: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_12
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 57 (label: match_check_12)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 57 at IP 57: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 58 at IP 58: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 59 at IP 59: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 60 at IP 60: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 61 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '=' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 61 at IP 61: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_14
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 62 (label: match_check_14)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 62 at IP 62: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 63 at IP 63: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 80 at IP 80: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 81 at IP 81: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 82 at IP 82: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 83 at IP 83: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 84 at IP 84: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 85 at IP 85: StoreConst
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 86 at IP 86: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 90 at IP 90: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 91 at IP 91: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 92 at IP 92: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 93 at IP 93: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 94 at IP 94: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 10, 116, 104, 101, 32, 108, 105, 115, 116, 32, 105, 115, 58, 32, 91, 42, 44, 32, 43, 44, 32, 45, 93, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 95 at IP 95: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 96 at IP 96: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 97 at IP 97: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 98 at IP 98: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 99 at IP 99: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 100 at IP 100: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 101 at IP 101: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 102 at IP 102: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 103 at IP 103: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 104 at IP 104: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 111, 112, 112, 101, 100, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 61, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 105 at IP 105: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 106 at IP 106: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 107 at IP 107: Peek
[Debug][Hint] interpreter/vm.zig:1356:0: Peek called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 61 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:1367:0: Peek instruction for variable x
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 108 at IP 108: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 109 at IP 109: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 110 at IP 110: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 111 at IP 111: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 112 at IP 112: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 113 at IP 113: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 114 at IP 114: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 115 at IP 115: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 116 at IP 116: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 117 at IP 117: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 114, 101, 99, 101, 100, 101, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 50, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 118 at IP 118: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 119 at IP 119: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 32 at IP 32: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 33 at IP 33: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 34 at IP 34: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: while_body_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 37 at IP 37: ArrayPop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 38 at IP 38: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar list: storage_id=6, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 40 at IP 40: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 41 at IP 41: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar x: storage_id=7, value=types.types.TokenLiteral{ .string = { 45 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 42 at IP 42: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 43 at IP 43: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 44 at IP 44: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 45 at IP 45: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '-' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 46 at IP 46: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_8
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 47 (label: match_check_8)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 47 at IP 47: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 48 at IP 48: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 49 at IP 49: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 50 at IP 50: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '-' and '-', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 51 at IP 51: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=match_case_7
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 68 (label: match_case_7)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 68 at IP 68: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 69 at IP 69: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 70 at IP 70: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 71 at IP 71: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 84 at IP 84: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 85 at IP 85: StoreConst
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 86 at IP 86: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 90 at IP 90: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 91 at IP 91: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 92 at IP 92: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 93 at IP 93: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 94 at IP 94: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 10, 116, 104, 101, 32, 108, 105, 115, 116, 32, 105, 115, 58, 32, 91, 42, 44, 32, 43, 93, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 95 at IP 95: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 96 at IP 96: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 97 at IP 97: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 98 at IP 98: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 99 at IP 99: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 100 at IP 100: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 101 at IP 101: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 102 at IP 102: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 103 at IP 103: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 104 at IP 104: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 111, 112, 112, 101, 100, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 45, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 105 at IP 105: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 106 at IP 106: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 107 at IP 107: Peek
[Debug][Hint] interpreter/vm.zig:1356:0: Peek called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 45 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:1367:0: Peek instruction for variable x
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 108 at IP 108: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 109 at IP 109: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 110 at IP 110: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 111 at IP 111: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 112 at IP 112: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 113 at IP 113: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 114 at IP 114: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 115 at IP 115: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 116 at IP 116: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 117 at IP 117: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 114, 101, 99, 101, 100, 101, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 50, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 118 at IP 118: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 119 at IP 119: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 32 at IP 32: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 33 at IP 33: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 34 at IP 34: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: while_body_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 37 at IP 37: ArrayPop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 38 at IP 38: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar list: storage_id=6, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 40 at IP 40: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 41 at IP 41: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar x: storage_id=7, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 42 at IP 42: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 43 at IP 43: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 44 at IP 44: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 45 at IP 45: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 46 at IP 46: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=match_case_6
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 64 (label: match_case_6)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 64 at IP 64: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 65 at IP 65: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 66 at IP 66: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 67 at IP 67: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 84 at IP 84: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 85 at IP 85: StoreConst
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 86 at IP 86: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 90 at IP 90: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 91 at IP 91: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 92 at IP 92: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 93 at IP 93: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 94 at IP 94: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 10, 116, 104, 101, 32, 108, 105, 115, 116, 32, 105, 115, 58, 32, 91, 42, 93, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 95 at IP 95: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 96 at IP 96: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 97 at IP 97: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 98 at IP 98: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 99 at IP 99: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 100 at IP 100: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 101 at IP 101: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 102 at IP 102: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 103 at IP 103: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 104 at IP 104: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 111, 112, 112, 101, 100, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 43, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 105 at IP 105: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 106 at IP 106: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 107 at IP 107: Peek
[Debug][Hint] interpreter/vm.zig:1356:0: Peek called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 43 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:1367:0: Peek instruction for variable x
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 108 at IP 108: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 109 at IP 109: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 110 at IP 110: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 111 at IP 111: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 112 at IP 112: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 113 at IP 113: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 114 at IP 114: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 115 at IP 115: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 116 at IP 116: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 117 at IP 117: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 114, 101, 99, 101, 100, 101, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 50, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 118 at IP 118: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 119 at IP 119: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 32 at IP 32: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 33 at IP 33: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 34 at IP 34: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=while_body_3
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 35 (label: while_body_3)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 35 at IP 35: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 36 at IP 36: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 37 at IP 37: ArrayPop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 38 at IP 38: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 39 at IP 39: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar list: storage_id=6, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 40 at IP 40: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 41 at IP 41: StoreVar
[Debug][Hint] interpreter/vm.zig:981:0: DBG WRITE StoreVar x: storage_id=7, value=types.types.TokenLiteral{ .string = { 42 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 42 at IP 42: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 43 at IP 43: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 44 at IP 44: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 45 at IP 45: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '*' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 46 at IP 46: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_8
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 47 (label: match_check_8)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 47 at IP 47: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 48 at IP 48: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 49 at IP 49: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 50 at IP 50: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '*' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 51 at IP 51: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=match_check_10
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 52 (label: match_check_10)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 52 at IP 52: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 53 at IP 53: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 54 at IP 54: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 55 at IP 55: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3405:0: DBG compareEqual: comparing strings '*' and '*', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 56 at IP 56: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=match_case_9
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 72 (label: match_case_9)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 72 at IP 72: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 73 at IP 73: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 74 at IP 74: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 75 at IP 75: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 84 at IP 84: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 85 at IP 85: StoreConst
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 86 at IP 86: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 90 at IP 90: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 91 at IP 91: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 92 at IP 92: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 93 at IP 93: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 94 at IP 94: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 10, 116, 104, 101, 32, 108, 105, 115, 116, 32, 105, 115, 58, 32, 91, 93, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 95 at IP 95: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 96 at IP 96: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 97 at IP 97: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 98 at IP 98: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 99 at IP 99: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 100 at IP 100: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 101 at IP 101: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 102 at IP 102: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 103 at IP 103: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 104 at IP 104: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 111, 112, 112, 101, 100, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 42, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 105 at IP 105: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 106 at IP 106: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 107 at IP 107: Peek
[Debug][Hint] interpreter/vm.zig:1356:0: Peek called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 42 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:1367:0: Peek instruction for variable x
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 108 at IP 108: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 109 at IP 109: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 110 at IP 110: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 111 at IP 111: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 112 at IP 112: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 113 at IP 113: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 114 at IP 114: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 115 at IP 115: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 116 at IP 116: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 117 at IP 117: Print
[Debug][Hint] interpreter/vm.zig:1504:0: DBG Print: executing Print instruction
[Debug][Hint] interpreter/vm.zig:1506:0: Print called with value: interpreter.vm.HIRFrame{ .value = codegen.hir.soxa_values.HIRValue{ .string = { 116, 104, 101, 32, 112, 114, 101, 99, 101, 100, 101, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 50, 10 } }, .field_name = null, .scope_refs = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 118 at IP 118: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 119 at IP 119: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 29 at IP 29: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 30 at IP 30: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 31 at IP 31: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 32 at IP 32: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 33 at IP 33: Compare
[Debug][Hint] interpreter/vm.zig:1258:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1270:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 34 at IP 34: JumpCond
[Debug][Hint] interpreter/vm.zig:1321:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=while_end_4
[Debug][Hint] interpreter/vm.zig:1326:0: DBG JumpCond: jumping to IP 120 (label: while_end_4)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 120 at IP 120: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 121 at IP 121: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 122 at IP 122: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 123 at IP 123: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 22 at IP 22: Halt
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:39:9: Type casting 'as' can only be used with union types, got Array
[Runtime][Error][E1001] Cannot modify constant variable: input
[Runtime][Error][E1001] Cannot modify constant variable: input
[Runtime][Error][E1001] Cannot modify constant variable: input
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:374:1: Type mismatch: expected Int, got Union
[Runtime][Error][E1001] Cannot modify constant variable: limit
[Runtime][Error][E1001] Cannot modify constant variable: x
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:374:1: Type mismatch: expected Int, got Union
[Runtime][Error][E1001] Cannot modify constant variable: limit
[Runtime][Error][E1001] Cannot modify constant variable: x
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:375:1: Type mismatch: expected Int, got Union
[Runtime][Error][E1001] Cannot modify constant variable: limit
[Runtime][Error][E1001] Cannot modify constant variable: x
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:375:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:375:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:375:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:375:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:375:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:375:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:374:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:394:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:394:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:39:9: Type casting 'as' can only be used with union types, got Array
[CompileTime][Error][E2017] ./test/examples/calculator.doxa:157:79: Unsupported unary operator: types.token.TokenType.BANG
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:151:48: Cannot use + operator between Int and String
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:151:41: Cannot use + operator between String and Unknown
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:151:41: Cannot use + operator between String and Unknown
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:151:49: Cannot use + operator between Int and String
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:151:42: Cannot use + operator between String and Unknown
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:151:42: Cannot use + operator between String and Unknown
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E2021] ./test/examples/calculator.doxa:153:57: Expected then
[CompileTime][Error][E1001] ./test/examples/calculator.doxa:47:1: Undefined variable 'valid_number'
[CompileTime][Error][E6001] ./test/examples/calculator.doxa:48:19: Cannot call array method 'push' on non-array type Int
[CompileTime][Error][E1001] ./test/examples/calculator.doxa:47:1: Undefined variable 'valid_number'
[CompileTime][Error][E1001] ./test/examples/calculator.doxa:48:26: Undefined variable
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:48:26: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:48:26: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:49:26: Type mismatch: expected Int, got Union
[CompileTime][Error][E2017] ./test/examples/calculator.doxa:35:16: Unsupported unary operator: types.token.TokenType.BANG
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:49:26: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:49:26: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:50:26: Type mismatch: expected Int, got Union
[Runtime][Error][E1001] Cannot perform NOT on a non-tetra value: nothing
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:50:26: Type mismatch: expected Int, got Union
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test/examples/calculator.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test/examples/calculator.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:409:0: Debug: Processing script: './test/examples/calculator.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test/examples/calculator.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable stack has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:1857:0: Checking union members for variable valid_number
[Debug][Hint] codegen/hir/soxa_generator.zig:1873:0: No union members found for valid_number
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable result has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable current has type base: String
[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable depth has type base: Int
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable passed has type base: Tetra
[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable tokens has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable output has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable operators has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Unknown GREATER_EQUAL Unknown
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER_EQUAL: left_type=Unknown, right_type=Unknown, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_119
[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4094:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 10 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test/examples/calculator.doxa -> out/calculator.soxa (872 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 872 instructions, 125 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) TokenType: storage_id=46, value=types.types.TokenLiteral{ .string = { 84, 111, 107, 101, 110, 84, 121, 112, 101 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 72 at IP 72: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 73 at IP 73: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 74 at IP 74: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 75 at IP 75: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 76 at IP 76: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 77 at IP 77: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) input: storage_id=47, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 78 at IP 78: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 79 at IP 79: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 216 at IP 216: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 217 at IP 217: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 218 at IP 218: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=48, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 219 at IP 219: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 220 at IP 220: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 221 at IP 221: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) result: storage_id=49, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 222 at IP 222: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 223 at IP 223: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) current: storage_id=50, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 224 at IP 224: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 225 at IP 225: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 226 at IP 226: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) lin: storage_id=51, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 227 at IP 227: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 228 at IP 228: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 229 at IP 229: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_45: storage_id=52, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 230 at IP 230: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 231 at IP 231: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_45: storage_id=53, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 232 at IP 232: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 233 at IP 233: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) i: storage_id=54, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 234 at IP 234: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 235 at IP 235: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 236 at IP 236: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 237 at IP 237: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 238 at IP 238: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_46
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 239 (label: foreach_body_46)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 239 at IP 239: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 240 at IP 240: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 241 at IP 241: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 242 at IP 242: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 243 at IP 243: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 244 at IP 244: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 245 at IP 245: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) c: storage_id=55, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 246 at IP 246: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 247 at IP 247: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 248 at IP 248: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 249 at IP 249: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_49
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 269 (label: else_49)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 269 at IP 269: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 270 at IP 270: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 271 at IP 271: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 272 at IP 272: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 273 at IP 273: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 274 at IP 274: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 275 at IP 275: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 276 at IP 276: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 277 at IP 277: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 278 at IP 278: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 279 at IP 279: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 280 at IP 280: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 281 at IP 281: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 282 at IP 282: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 283 at IP 283: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 284 at IP 284: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 285 at IP 285: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 286 at IP 286: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 287 at IP 287: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 288 at IP 288: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 289 at IP 289: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_55
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 315 (label: else_55)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 315 at IP 315: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 316 at IP 316: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 317 at IP 317: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 318 at IP 318: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 319 at IP 319: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 320 at IP 320: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_62
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 330 (label: and_end_62)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 330 at IP 330: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 331 at IP 331: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_63
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 357 (label: else_63)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 357 at IP 357: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 358 at IP 358: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 359 at IP 359: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 360 at IP 360: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 361 at IP 361: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_71
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 362 (label: then_71)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 362 at IP 362: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 363 at IP 363: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 364 at IP 364: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=50, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=54, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 234 at IP 234: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 235 at IP 235: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 236 at IP 236: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 237 at IP 237: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 238 at IP 238: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_46
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 239 (label: foreach_body_46)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 239 at IP 239: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 240 at IP 240: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 241 at IP 241: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 242 at IP 242: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 243 at IP 243: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 244 at IP 244: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 245 at IP 245: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=55, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 246 at IP 246: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 247 at IP 247: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 248 at IP 248: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 249 at IP 249: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_51
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 250 (label: then_51)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 250 at IP 250: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 251 at IP 251: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 252 at IP 252: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 253 at IP 253: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 254 at IP 254: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_54
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 255 (label: then_54)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 255 at IP 255: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 256 at IP 256: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 257 at IP 257: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 258 at IP 258: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 259 at IP 259: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=49, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 260 at IP 260: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 261 at IP 261: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 262 at IP 262: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=50, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 263 at IP 263: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 264 at IP 264: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 267 at IP 267: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 268 at IP 268: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=54, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 234 at IP 234: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 235 at IP 235: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 236 at IP 236: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 237 at IP 237: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 238 at IP 238: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_46
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 239 (label: foreach_body_46)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 239 at IP 239: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 240 at IP 240: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 241 at IP 241: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 242 at IP 242: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 243 at IP 243: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 244 at IP 244: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 245 at IP 245: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=55, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 246 at IP 246: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 247 at IP 247: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 248 at IP 248: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 249 at IP 249: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_49
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 269 (label: else_49)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 269 at IP 269: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 270 at IP 270: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 271 at IP 271: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 272 at IP 272: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 273 at IP 273: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 274 at IP 274: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 275 at IP 275: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 276 at IP 276: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 277 at IP 277: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 278 at IP 278: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 279 at IP 279: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 280 at IP 280: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 281 at IP 281: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 282 at IP 282: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 283 at IP 283: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 284 at IP 284: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 285 at IP 285: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 286 at IP 286: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 287 at IP 287: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 288 at IP 288: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 289 at IP 289: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_57
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 290 (label: then_57)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 290 at IP 290: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 291 at IP 291: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 292 at IP 292: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 293 at IP 293: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 294 at IP 294: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_58
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 305 (label: else_58)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 305 at IP 305: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 306 at IP 306: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 307 at IP 307: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 308 at IP 308: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 309 at IP 309: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 310 at IP 310: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 311 at IP 311: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 312 at IP 312: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=49, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 313 at IP 313: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 314 at IP 314: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=54, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 234 at IP 234: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 235 at IP 235: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 236 at IP 236: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 237 at IP 237: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 238 at IP 238: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_46
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 239 (label: foreach_body_46)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 239 at IP 239: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 240 at IP 240: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 241 at IP 241: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 242 at IP 242: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 243 at IP 243: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 244 at IP 244: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 245 at IP 245: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=55, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 246 at IP 246: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 247 at IP 247: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 248 at IP 248: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 249 at IP 249: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_51
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 250 (label: then_51)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 250 at IP 250: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 251 at IP 251: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 252 at IP 252: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 253 at IP 253: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 254 at IP 254: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_52
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 265 (label: else_52)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 265 at IP 265: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 266 at IP 266: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 267 at IP 267: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 268 at IP 268: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=54, value=types.types.TokenLiteral{ .int = 4 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 234 at IP 234: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 235 at IP 235: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 236 at IP 236: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 237 at IP 237: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 4 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 238 at IP 238: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_46
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 239 (label: foreach_body_46)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 239 at IP 239: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 240 at IP 240: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 241 at IP 241: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 242 at IP 242: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 243 at IP 243: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 244 at IP 244: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 245 at IP 245: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=55, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 246 at IP 246: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 247 at IP 247: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 248 at IP 248: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 249 at IP 249: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_49
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 269 (label: else_49)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 269 at IP 269: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 270 at IP 270: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 271 at IP 271: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 272 at IP 272: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 273 at IP 273: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 274 at IP 274: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 275 at IP 275: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 276 at IP 276: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 277 at IP 277: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 278 at IP 278: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 279 at IP 279: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 280 at IP 280: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 281 at IP 281: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 282 at IP 282: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 283 at IP 283: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 284 at IP 284: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 285 at IP 285: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 286 at IP 286: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 287 at IP 287: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 288 at IP 288: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 289 at IP 289: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_55
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 315 (label: else_55)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 315 at IP 315: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 316 at IP 316: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 317 at IP 317: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 318 at IP 318: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 319 at IP 319: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 320 at IP 320: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_62
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 330 (label: and_end_62)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 330 at IP 330: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 331 at IP 331: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_63
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 357 (label: else_63)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 357 at IP 357: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 358 at IP 358: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 359 at IP 359: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 360 at IP 360: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 361 at IP 361: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_71
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 362 (label: then_71)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 362 at IP 362: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 363 at IP 363: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 364 at IP 364: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=50, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=54, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 234 at IP 234: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 235 at IP 235: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 236 at IP 236: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 237 at IP 237: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 238 at IP 238: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_48
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 383 (label: foreach_end_48)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 386 at IP 386: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 387 at IP 387: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 388 at IP 388: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 389 at IP 389: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=49, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 390 at IP 390: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 391 at IP 391: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 80 at IP 80: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) splitInput: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 81 at IP 81: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 82 at IP 82: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 393 at IP 393: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 394 at IP 394: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 395 at IP 395: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=57, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 396 at IP 396: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 397 at IP 397: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) depth: storage_id=58, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) passed: storage_id=59, value=types.types.TokenLiteral{ .tetra = types.types.Tetra.true }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_73: storage_id=60, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_73: storage_id=61, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_73: storage_id=62, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_74
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 413 (label: foreach_body_74)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) s: storage_id=63, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_77
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 429 (label: else_77)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 429 at IP 429: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 430 at IP 430: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 431 at IP 431: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 432 at IP 432: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 433 at IP 433: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 434 at IP 434: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 435 at IP 435: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_80
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 442 (label: else_80)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 455 (label: else_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 455 at IP 455: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 456 at IP 456: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 457 at IP 457: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 458 at IP 458: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 459 at IP 459: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 460 at IP 460: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_73: storage_id=62, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 463 at IP 463: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_74
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 413 (label: foreach_body_74)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=63, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_77
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 429 (label: else_77)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 429 at IP 429: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 430 at IP 430: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 431 at IP 431: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 432 at IP 432: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 433 at IP 433: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 434 at IP 434: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 435 at IP 435: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_80
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 442 (label: else_80)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 455 (label: else_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 455 at IP 455: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 456 at IP 456: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 457 at IP 457: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 458 at IP 458: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 459 at IP 459: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 460 at IP 460: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_73: storage_id=62, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 463 at IP 463: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_74
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 413 (label: foreach_body_74)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=63, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_77
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 429 (label: else_77)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 429 at IP 429: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 430 at IP 430: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 431 at IP 431: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 432 at IP 432: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 433 at IP 433: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 434 at IP 434: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 435 at IP 435: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_80
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 442 (label: else_80)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 455 (label: else_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 455 at IP 455: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 456 at IP 456: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 457 at IP 457: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 458 at IP 458: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 459 at IP 459: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 460 at IP 460: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_73: storage_id=62, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 463 at IP 463: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 464 (label: foreach_end_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 464 at IP 464: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 465 at IP 465: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 466 at IP 466: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 467 at IP 467: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 468 at IP 468: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 469 at IP 469: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_86
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 476 (label: else_86)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 476 at IP 476: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 477 at IP 477: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 478 at IP 478: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 479 at IP 479: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 480 at IP 480: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 83 at IP 83: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=assert_success_23
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 87 (label: assert_success_23)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 482 at IP 482: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 483 at IP 483: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 484 at IP 484: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=64, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 485 at IP 485: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 486 at IP 486: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 487 at IP 487: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) tokens: storage_id=65, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_90: storage_id=66, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_90: storage_id=67, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_90: storage_id=68, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_91
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 500 (label: foreach_body_91)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 502 at IP 502: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 503 at IP 503: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) token: storage_id=69, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 515 at IP 515: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 516 at IP 516: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 517 at IP 517: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 518 at IP 518: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 519 at IP 519: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 520 at IP 520: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 521 at IP 521: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_94
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 534 (label: else_94)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 534 at IP 534: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 535 at IP 535: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 536 at IP 536: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 537 at IP 537: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 538 at IP 538: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_97
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 551 (label: else_97)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 555 at IP 555: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_100
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 568 (label: else_100)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 568 at IP 568: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 569 at IP 569: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 570 at IP 570: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 571 at IP 571: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 572 at IP 572: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_105
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 573 (label: then_105)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 573 at IP 573: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: StructNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 581 at IP 581: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 582 at IP 582: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) tokens: storage_id=65, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .struct_value = types.types.TokenLiteral__struct_24599{ ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 583 at IP 583: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 584 at IP 584: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_90: storage_id=68, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_91
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 500 (label: foreach_body_91)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 502 at IP 502: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 503 at IP 503: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) token: storage_id=69, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 515 at IP 515: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 516 at IP 516: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 517 at IP 517: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 518 at IP 518: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 519 at IP 519: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 520 at IP 520: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 521 at IP 521: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_96
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 522 (label: then_96)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 522 at IP 522: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 523 at IP 523: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 524 at IP 524: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 525 at IP 525: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 526 at IP 526: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 527 at IP 527: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 528 at IP 528: StructNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 529 at IP 529: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 530 at IP 530: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 531 at IP 531: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) tokens: storage_id=65, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .struct_value = types.types.TokenLiteral__struct_24599{ ... } }, types.types.TokenLiteral{ .struct_value = types.types.TokenLiteral__struct_24599{ ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 532 at IP 532: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 533 at IP 533: Jump
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:67:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:70:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:74:56: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:74:56: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:75:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:82:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:74:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:74:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:75:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:82:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test/examples/calculator.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test/examples/calculator.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] analysis/semantic.zig:3555:0: DBG: Cast validation sees type: Union
[Debug][Hint] analysis/semantic.zig:3555:0: DBG: Cast validation sees type: Union
[Debug][Hint] analysis/semantic.zig:3555:0: DBG: Cast validation sees type: Union
[Debug][Hint] analysis/semantic.zig:2906:0: DBG: Lowered @int to StringToInt with union type
[Debug][Hint] analysis/semantic.zig:3555:0: DBG: Cast validation sees type: Union
[Debug][Hint] analysis/semantic.zig:3555:0: DBG: Cast validation sees type: Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[Debug][Hint] analysis/semantic.zig:3555:0: DBG: Cast validation sees type: Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable stack has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int SLASH Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op SLASH: left_type=Int, right_type=Int, result_type=Float

[Debug][Hint] codegen/hir/soxa_generator.zig:1857:0: Checking union members for variable maybe_int
[Debug][Hint] codegen/hir/soxa_generator.zig:1868:0: Found union members for maybe_int by index: { { 105, 110, 116 }, { 78, 117, 109, 98, 101, 114, 69, 114, 114, 111, 114 } }
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int ASTERISK Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op ASTERISK: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable result has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable current has type base: String
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable depth has type base: Int
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable passed has type base: Tetra
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable tokens has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable output has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable operators has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown GREATER_EQUAL Unknown
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER_EQUAL: left_type=Unknown, right_type=Unknown, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_140
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 5 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test/examples/calculator.doxa -> out/calculator.soxa (1007 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 1007 instructions, 140 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) TokenType: storage_id=53, value=types.types.TokenLiteral{ .string = { 84, 111, 107, 101, 110, 84, 121, 112, 101 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 72 at IP 72: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 73 at IP 73: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 74 at IP 74: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 75 at IP 75: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 76 at IP 76: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 77 at IP 77: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) input: storage_id=54, value=types.types.TokenLiteral{ .string = { 53, 32, 43, 32, 54, 54, 32, 43, 32, 55 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 78 at IP 78: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 79 at IP 79: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 347 at IP 347: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 348 at IP 348: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 349 at IP 349: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=55, value=types.types.TokenLiteral{ .string = { 53, 32, 43, 32, 54, 54, 32, 43, 32, 55 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 350 at IP 350: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 351 at IP 351: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 352 at IP 352: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 353 at IP 353: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 354 at IP 354: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 355 at IP 355: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 356 at IP 356: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 357 at IP 357: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) lin: storage_id=58, value=types.types.TokenLiteral{ .int = 10 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 358 at IP 358: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 359 at IP 359: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 360 at IP 360: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_66: storage_id=59, value=types.types.TokenLiteral{ .string = { 53, 32, 43, 32, 54, 54, 32, 43, 32, 55 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 361 at IP 361: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 362 at IP 362: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_66: storage_id=60, value=types.types.TokenLiteral{ .int = 10 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 363 at IP 363: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 364 at IP 364: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) i: storage_id=61, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_75
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 386 (label: then_75)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 386 at IP 386: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 387 at IP 387: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 388 at IP 388: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 389 at IP 389: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 390 at IP 390: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 391 at IP 391: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 392 at IP 392: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 393 at IP 393: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 394 at IP 394: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 395 at IP 395: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_78
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 421 (label: then_78)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 423 at IP 423: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 424 at IP 424: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 425 at IP 425: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_79
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 436 (label: else_79)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 436 at IP 436: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 437 at IP 437: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 438 at IP 438: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 439 at IP 439: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 440 at IP 440: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 441 at IP 441: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_73
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 396 (label: else_73)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 396 at IP 396: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 397 at IP 397: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 4 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 4 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 54 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 54 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 54 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '6' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 54, 54 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 6 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 6 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 54, 54 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '66' and '', lengths: 2 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_75
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 386 (label: then_75)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 386 at IP 386: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 387 at IP 387: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 388 at IP 388: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 389 at IP 389: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 390 at IP 390: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 391 at IP 391: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 392 at IP 392: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 393 at IP 393: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 394 at IP 394: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 395 at IP 395: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 7 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 7 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_78
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 421 (label: then_78)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 423 at IP 423: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 424 at IP 424: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 425 at IP 425: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_79
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 436 (label: else_79)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 436 at IP 436: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 437 at IP 437: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 438 at IP 438: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 439 at IP 439: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 440 at IP 440: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 441 at IP 441: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 8 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 8 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_73
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 396 (label: else_73)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 396 at IP 396: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 397 at IP 397: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 9 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 9 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 10 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 55 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 55 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '7' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 55 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '7' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 55 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '7' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 55 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '7' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 55 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '7' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 55 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '7' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 55 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '7' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E5011] ./test/examples/calculator.doxa:83:5: Function expects return value of type Union, but return statement has no value
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test/examples/calculator.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test/examples/calculator.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] analysis/semantic.zig:3553:0: DBG: Cast validation - expression type: Union
[Debug][Hint] analysis/semantic.zig:3553:0: DBG: Cast validation - expression type: Union
[Debug][Hint] analysis/semantic.zig:3553:0: DBG: Cast validation - expression type: Union
[Debug][Hint] analysis/semantic.zig:3553:0: DBG: Cast validation - expression type: Union
[Debug][Hint] analysis/semantic.zig:3553:0: DBG: Cast validation - expression type: Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[Debug][Hint] analysis/semantic.zig:3553:0: DBG: Cast validation - expression type: Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable stack has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int SLASH Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op SLASH: left_type=Int, right_type=Int, result_type=Float

[Debug][Hint] codegen/hir/soxa_generator.zig:1857:0: Checking union members for variable maybe_int
[Debug][Hint] codegen/hir/soxa_generator.zig:1868:0: Found union members for maybe_int by index: { { 105, 110, 116 }, { 78, 117, 109, 98, 101, 114, 69, 114, 114, 111, 114 } }
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int ASTERISK Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op ASTERISK: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable result has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable current has type base: String
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable depth has type base: Int
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable passed has type base: Tetra
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable tokens has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable output has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable operators has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown GREATER_EQUAL Unknown
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER_EQUAL: left_type=Unknown, right_type=Unknown, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_140
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 5 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test/examples/calculator.doxa -> out/calculator.soxa (1007 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 1007 instructions, 140 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) TokenType: storage_id=53, value=types.types.TokenLiteral{ .string = { 84, 111, 107, 101, 110, 84, 121, 112, 101 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 72 at IP 72: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 73 at IP 73: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 74 at IP 74: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 75 at IP 75: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 76 at IP 76: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 77 at IP 77: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) input: storage_id=54, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 78 at IP 78: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 79 at IP 79: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 347 at IP 347: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 348 at IP 348: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 349 at IP 349: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=55, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 350 at IP 350: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 351 at IP 351: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 352 at IP 352: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 353 at IP 353: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 354 at IP 354: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 355 at IP 355: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 356 at IP 356: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 357 at IP 357: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) lin: storage_id=58, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 358 at IP 358: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 359 at IP 359: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 360 at IP 360: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_66: storage_id=59, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 361 at IP 361: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 362 at IP 362: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_66: storage_id=60, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 363 at IP 363: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 364 at IP 364: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) i: storage_id=61, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_75
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 386 (label: then_75)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 386 at IP 386: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 387 at IP 387: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 388 at IP 388: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 389 at IP 389: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 390 at IP 390: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 391 at IP 391: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 392 at IP 392: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 393 at IP 393: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 394 at IP 394: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 395 at IP 395: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_78
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 421 (label: then_78)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 423 at IP 423: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 424 at IP 424: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 425 at IP 425: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_79
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 436 (label: else_79)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 436 at IP 436: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 437 at IP 437: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 438 at IP 438: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 439 at IP 439: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 440 at IP 440: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 441 at IP 441: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_73
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 396 (label: else_73)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 396 at IP 396: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 397 at IP 397: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 4 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 4 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_69
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 515 (label: foreach_end_69)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 515 at IP 515: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 516 at IP 516: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 517 at IP 517: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 518 at IP 518: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 519 at IP 519: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 520 at IP 520: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 521 at IP 521: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 522 at IP 522: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 523 at IP 523: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 80 at IP 80: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) splitInput: storage_id=63, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 81 at IP 81: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 82 at IP 82: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 525 at IP 525: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 526 at IP 526: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 527 at IP 527: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=64, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 528 at IP 528: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 529 at IP 529: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 530 at IP 530: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) depth: storage_id=65, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 531 at IP 531: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 532 at IP 532: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) passed: storage_id=66, value=types.types.TokenLiteral{ .tetra = types.types.Tetra.true }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 533 at IP 533: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 534 at IP 534: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 535 at IP 535: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_94: storage_id=67, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 536 at IP 536: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 537 at IP 537: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_94: storage_id=68, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 538 at IP 538: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 539 at IP 539: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_97
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 597 (label: foreach_end_97)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 597 at IP 597: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 598 at IP 598: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 599 at IP 599: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 600 at IP 600: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 601 at IP 601: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 602 at IP 602: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_107
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 609 (label: else_107)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 609 at IP 609: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 610 at IP 610: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 611 at IP 611: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 612 at IP 612: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 613 at IP 613: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 83 at IP 83: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=assert_success_23
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 87 (label: assert_success_23)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 615 at IP 615: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 616 at IP 616: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 617 at IP 617: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=71, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 618 at IP 618: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 619 at IP 619: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 620 at IP 620: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 621 at IP 621: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 622 at IP 622: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 623 at IP 623: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_111: storage_id=73, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 624 at IP 624: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 625 at IP 625: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_111: storage_id=74, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 626 at IP 626: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 627 at IP 627: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 642 at IP 642: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 643 at IP 643: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 644 at IP 644: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 645 at IP 645: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 646 at IP 646: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 647 at IP 647: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 648 at IP 648: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 649 at IP 649: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 650 at IP 650: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 651 at IP 651: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 652 at IP 652: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 653 at IP 653: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 654 at IP 654: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_115
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 667 (label: else_115)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 667 at IP 667: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 668 at IP 668: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 669 at IP 669: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 670 at IP 670: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 671 at IP 671: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_118
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 684 (label: else_118)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 684 at IP 684: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 685 at IP 685: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 686 at IP 686: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 687 at IP 687: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 688 at IP 688: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_121
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 701 (label: else_121)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 701 at IP 701: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 702 at IP 702: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 703 at IP 703: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 704 at IP 704: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 705 at IP 705: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_126
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 706 (label: then_126)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 706 at IP 706: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 707 at IP 707: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 708 at IP 708: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 709 at IP 709: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 710 at IP 710: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 711 at IP 711: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 712 at IP 712: StructNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 713 at IP 713: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 714 at IP 714: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 715 at IP 715: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .struct_value = types.types.TokenLiteral__struct_24599{ ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 716 at IP 716: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 717 at IP 717: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 720 at IP 720: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 721 at IP 721: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 722 at IP 722: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 723 at IP 723: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 724 at IP 724: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 725 at IP 725: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 726 at IP 726: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 727 at IP 727: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 728 at IP 728: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 729 at IP 729: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 730 at IP 730: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test/examples/calculator.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test/examples/calculator.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable stack has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int SLASH Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op SLASH: left_type=Int, right_type=Int, result_type=Float

[Debug][Hint] codegen/hir/soxa_generator.zig:1857:0: Checking union members for variable maybe_int
[Debug][Hint] codegen/hir/soxa_generator.zig:1868:0: Found union members for maybe_int by index: { { 105, 110, 116 }, { 78, 117, 109, 98, 101, 114, 69, 114, 114, 111, 114 } }
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int ASTERISK Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op ASTERISK: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable result has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable current has type base: String
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable depth has type base: Int
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable passed has type base: Tetra
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable tokens has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable output has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable operators has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown GREATER_EQUAL Unknown
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER_EQUAL: left_type=Unknown, right_type=Unknown, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_140
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 5 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test/examples/calculator.doxa -> out/calculator.soxa (1007 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 1007 instructions, 140 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) TokenType: storage_id=53, value=types.types.TokenLiteral{ .string = { 84, 111, 107, 101, 110, 84, 121, 112, 101 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 72 at IP 72: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 73 at IP 73: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 74 at IP 74: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 75 at IP 75: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 76 at IP 76: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 77 at IP 77: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) input: storage_id=54, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 78 at IP 78: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 79 at IP 79: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 347 at IP 347: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 348 at IP 348: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 349 at IP 349: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=55, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 350 at IP 350: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 351 at IP 351: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 352 at IP 352: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 353 at IP 353: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 354 at IP 354: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 355 at IP 355: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 356 at IP 356: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 357 at IP 357: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) lin: storage_id=58, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 358 at IP 358: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 359 at IP 359: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 360 at IP 360: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_66: storage_id=59, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 361 at IP 361: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 362 at IP 362: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_66: storage_id=60, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 363 at IP 363: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 364 at IP 364: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) i: storage_id=61, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_75
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 386 (label: then_75)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 386 at IP 386: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 387 at IP 387: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 388 at IP 388: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 389 at IP 389: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 390 at IP 390: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 391 at IP 391: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 392 at IP 392: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 393 at IP 393: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 394 at IP 394: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 395 at IP 395: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_78
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 421 (label: then_78)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 423 at IP 423: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 424 at IP 424: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 425 at IP 425: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_79
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 436 (label: else_79)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 436 at IP 436: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 437 at IP 437: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 438 at IP 438: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 439 at IP 439: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 440 at IP 440: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 441 at IP 441: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_73
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 396 (label: else_73)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 396 at IP 396: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 397 at IP 397: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 4 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 4 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_69
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 515 (label: foreach_end_69)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 515 at IP 515: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 516 at IP 516: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 517 at IP 517: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 518 at IP 518: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 519 at IP 519: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 520 at IP 520: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 521 at IP 521: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 522 at IP 522: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 523 at IP 523: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 80 at IP 80: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) splitInput: storage_id=63, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 81 at IP 81: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 82 at IP 82: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 525 at IP 525: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 526 at IP 526: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 527 at IP 527: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=64, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 528 at IP 528: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 529 at IP 529: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 530 at IP 530: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) depth: storage_id=65, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 531 at IP 531: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 532 at IP 532: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) passed: storage_id=66, value=types.types.TokenLiteral{ .tetra = types.types.Tetra.true }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 533 at IP 533: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 534 at IP 534: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 535 at IP 535: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_94: storage_id=67, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 536 at IP 536: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 537 at IP 537: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_94: storage_id=68, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 538 at IP 538: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 539 at IP 539: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_97
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 597 (label: foreach_end_97)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 597 at IP 597: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 598 at IP 598: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 599 at IP 599: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 600 at IP 600: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 601 at IP 601: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 602 at IP 602: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_107
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 609 (label: else_107)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 609 at IP 609: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 610 at IP 610: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 611 at IP 611: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 612 at IP 612: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 613 at IP 613: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 83 at IP 83: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=assert_success_23
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 87 (label: assert_success_23)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 615 at IP 615: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 616 at IP 616: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 617 at IP 617: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=71, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 618 at IP 618: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 619 at IP 619: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 620 at IP 620: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 621 at IP 621: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 622 at IP 622: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 623 at IP 623: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_111: storage_id=73, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 624 at IP 624: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 625 at IP 625: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_111: storage_id=74, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 626 at IP 626: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 627 at IP 627: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 642 at IP 642: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 643 at IP 643: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 644 at IP 644: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 645 at IP 645: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 646 at IP 646: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 647 at IP 647: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 648 at IP 648: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 649 at IP 649: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 650 at IP 650: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 651 at IP 651: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 652 at IP 652: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 653 at IP 653: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 654 at IP 654: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_115
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 667 (label: else_115)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 667 at IP 667: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 668 at IP 668: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 669 at IP 669: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 670 at IP 670: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 671 at IP 671: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_118
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 684 (label: else_118)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 684 at IP 684: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 685 at IP 685: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 686 at IP 686: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 687 at IP 687: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 688 at IP 688: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_121
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 701 (label: else_121)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 701 at IP 701: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 702 at IP 702: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 703 at IP 703: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 704 at IP 704: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 705 at IP 705: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_126
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 706 (label: then_126)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 706 at IP 706: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 707 at IP 707: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 708 at IP 708: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 709 at IP 709: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 710 at IP 710: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 711 at IP 711: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 712 at IP 712: StructNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 713 at IP 713: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 714 at IP 714: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 715 at IP 715: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .struct_value = types.types.TokenLiteral__struct_24599{ ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 716 at IP 716: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 717 at IP 717: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 720 at IP 720: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 721 at IP 721: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 722 at IP 722: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 723 at IP 723: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 724 at IP 724: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 725 at IP 725: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 726 at IP 726: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 727 at IP 727: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 728 at IP 728: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 729 at IP 729: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 730 at IP 730: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 642 at IP 642: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 643 at IP 643: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 644 at IP 644: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '-', lengths: 1 and 1, result: false
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test/examples/calculator.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test/examples/calculator.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] analysis/semantic.zig:835:0: DBG: Storing type for maybe_int: Union
[Debug][Hint] analysis/semantic.zig:835:0: DBG: Storing type for maybe_int: Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable stack has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int SLASH Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op SLASH: left_type=Int, right_type=Int, result_type=Float

[Debug][Hint] codegen/hir/soxa_generator.zig:1857:0: Checking union members for variable maybe_int
[Debug][Hint] codegen/hir/soxa_generator.zig:1868:0: Found union members for maybe_int by index: { { 105, 110, 116 }, { 78, 117, 109, 98, 101, 114, 69, 114, 114, 111, 114 } }
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int ASTERISK Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op ASTERISK: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable result has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable current has type base: String
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable depth has type base: Int
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable passed has type base: Tetra
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable tokens has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable output has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable operators has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown GREATER_EQUAL Unknown
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER_EQUAL: left_type=Unknown, right_type=Unknown, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_140
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 5 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test/examples/calculator.doxa -> out/calculator.soxa (1007 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 1007 instructions, 140 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) TokenType: storage_id=53, value=types.types.TokenLiteral{ .string = { 84, 111, 107, 101, 110, 84, 121, 112, 101 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 72 at IP 72: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 73 at IP 73: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 74 at IP 74: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 75 at IP 75: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 76 at IP 76: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 77 at IP 77: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) input: storage_id=54, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 78 at IP 78: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 79 at IP 79: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 347 at IP 347: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 348 at IP 348: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 349 at IP 349: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=55, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 350 at IP 350: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 351 at IP 351: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 352 at IP 352: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 353 at IP 353: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 354 at IP 354: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 355 at IP 355: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 356 at IP 356: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 357 at IP 357: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) lin: storage_id=58, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 358 at IP 358: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 359 at IP 359: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 360 at IP 360: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_66: storage_id=59, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 361 at IP 361: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 362 at IP 362: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_66: storage_id=60, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 363 at IP 363: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 364 at IP 364: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) i: storage_id=61, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_75
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 386 (label: then_75)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 386 at IP 386: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 387 at IP 387: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 388 at IP 388: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 389 at IP 389: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 390 at IP 390: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 391 at IP 391: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 392 at IP 392: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 393 at IP 393: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 394 at IP 394: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 395 at IP 395: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_78
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 421 (label: then_78)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 423 at IP 423: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 424 at IP 424: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 425 at IP 425: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_79
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 436 (label: else_79)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 436 at IP 436: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 437 at IP 437: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 438 at IP 438: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 439 at IP 439: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 440 at IP 440: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 441 at IP 441: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_73
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 396 (label: else_73)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 396 at IP 396: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 397 at IP 397: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 4 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 4 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_69
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 515 (label: foreach_end_69)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 515 at IP 515: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 516 at IP 516: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 517 at IP 517: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 518 at IP 518: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 519 at IP 519: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 520 at IP 520: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 521 at IP 521: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 522 at IP 522: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 523 at IP 523: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 80 at IP 80: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) splitInput: storage_id=63, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 81 at IP 81: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 82 at IP 82: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 525 at IP 525: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 526 at IP 526: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 527 at IP 527: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=64, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 528 at IP 528: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 529 at IP 529: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 530 at IP 530: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) depth: storage_id=65, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 531 at IP 531: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 532 at IP 532: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) passed: storage_id=66, value=types.types.TokenLiteral{ .tetra = types.types.Tetra.true }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 533 at IP 533: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 534 at IP 534: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 535 at IP 535: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_94: storage_id=67, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 536 at IP 536: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 537 at IP 537: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_94: storage_id=68, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 538 at IP 538: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 539 at IP 539: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_97
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 597 (label: foreach_end_97)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 597 at IP 597: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 598 at IP 598: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 599 at IP 599: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 600 at IP 600: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 601 at IP 601: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 602 at IP 602: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_107
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 609 (label: else_107)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 609 at IP 609: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 610 at IP 610: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 611 at IP 611: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 612 at IP 612: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 613 at IP 613: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 83 at IP 83: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=assert_success_23
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 87 (label: assert_success_23)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 615 at IP 615: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 616 at IP 616: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 617 at IP 617: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=71, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 618 at IP 618: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 619 at IP 619: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 620 at IP 620: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 621 at IP 621: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 622 at IP 622: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 623 at IP 623: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_111: storage_id=73, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 624 at IP 624: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 625 at IP 625: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_111: storage_id=74, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 626 at IP 626: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 627 at IP 627: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 642 at IP 642: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 643 at IP 643: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 644 at IP 644: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 645 at IP 645: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 646 at IP 646: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 647 at IP 647: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 648 at IP 648: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 649 at IP 649: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 650 at IP 650: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 651 at IP 651: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 652 at IP 652: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 653 at IP 653: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 654 at IP 654: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_115
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 667 (label: else_115)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 667 at IP 667: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 668 at IP 668: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 669 at IP 669: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 670 at IP 670: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 671 at IP 671: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_118
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 684 (label: else_118)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 684 at IP 684: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 685 at IP 685: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 686 at IP 686: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 687 at IP 687: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 688 at IP 688: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_121
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 701 (label: else_121)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 701 at IP 701: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 702 at IP 702: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 703 at IP 703: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 704 at IP 704: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 705 at IP 705: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_126
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 706 (label: then_126)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 706 at IP 706: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 707 at IP 707: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 708 at IP 708: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 709 at IP 709: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 710 at IP 710: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 711 at IP 711: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 712 at IP 712: StructNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 713 at IP 713: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 714 at IP 714: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 715 at IP 715: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .struct_value = types.types.TokenLiteral__struct_24599{ ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 716 at IP 716: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 717 at IP 717: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 720 at IP 720: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 721 at IP 721: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 722 at IP 722: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 723 at IP 723: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 724 at IP 724: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 725 at IP 725: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 726 at IP 726: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 727 at IP 727: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 728 at IP 728: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 729 at IP 729: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 730 at IP 730: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 642 at IP 642: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 643 at IP 643: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 644 at IP 644: Compare
[Debug][Hint] main.zig:409:0: Debug: Processing script: './test/examples/calculator.doxa'

[Debug][Hint] main.zig:429:0: Debug: Absolute path: '/home/user/dev/doxa/test/examples/calculator.doxa'

[Debug][Hint] main.zig:434:0: reporter debug method working

[Debug][Hint] analysis/semantic.zig:835:0: DBG: Storing type for maybe_int: Union
[Debug][Hint] analysis/semantic.zig:1338:0: DBG: Retrieved type for maybe_int: Union
[Debug][Hint] analysis/semantic.zig:835:0: DBG: Storing type for maybe_int: Int
[Debug][Hint] analysis/semantic.zig:1338:0: DBG: Retrieved type for maybe_int: Int
[Debug][Hint] analysis/semantic.zig:1338:0: DBG: Retrieved type for maybe_int: Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[Debug][Hint] main.zig:164:0: >> Constant folding applied: 0 optimizations

[Debug][Hint] codegen/hir/soxa_generator.zig:540:0: HIR: processing imported module globals: 0
[Debug][Hint] codegen/hir/soxa_generator.zig:565:0: HIR: processing current module globals
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable stack has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int SLASH Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op SLASH: left_type=Int, right_type=Int, result_type=Float

[Debug][Hint] codegen/hir/soxa_generator.zig:1857:0: Checking union members for variable maybe_int
[Debug][Hint] codegen/hir/soxa_generator.zig:1868:0: Found union members for maybe_int by index: { { 105, 110, 116 }, { 78, 117, 109, 98, 101, 114, 69, 114, 114, 111, 114 } }
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int ASTERISK Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op ASTERISK: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable result has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable current has type base: String
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int PLUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=String, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: String PLUS String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op PLUS: left_type=String, right_type=String, result_type=String

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable depth has type base: Int
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable passed has type base: Tetra
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int LESS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op LESS: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable tokens has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown BANG_EQUAL String
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Unknown, right_type=String, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable output has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:725:0: Variable operators has type base: Array
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown EQUALITY Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Unknown, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Unknown GREATER_EQUAL Unknown
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER_EQUAL: left_type=Unknown, right_type=Unknown, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:697:0: HIR: emitting break -> while_end_140
[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum BANG_EQUAL Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op BANG_EQUAL: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int MINUS Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op MINUS: left_type=Int, right_type=Int, result_type=Int

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Int GREATER Int
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op GREATER: left_type=Int, right_type=Int, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] codegen/hir/soxa_generator.zig:4100:0: inferBinaryOpResultType: Enum EQUALITY Enum
[Debug][Hint] codegen/hir/soxa_generator.zig:1245:0: Binary op EQUALITY: left_type=Enum, right_type=Enum, result_type=Tetra

[Debug][Hint] main.zig:191:0: >> Peephole optimizations applied: 5 HIR instruction optimizations

[Debug][Hint] main.zig:213:0: >> Compiled ./test/examples/calculator.doxa -> out/calculator.soxa (1007 HIR instructions)

[Debug][Hint] main.zig:507:0: >> Executing with HIR VM

[Debug][Hint] main.zig:224:0: >> Loaded SOXA: 1007 instructions, 140 constants

[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 0 at IP 0: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 1 at IP 1: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) TokenType: storage_id=53, value=types.types.TokenLiteral{ .string = { 84, 111, 107, 101, 110, 84, 121, 112, 101 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 2 at IP 2: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 3 at IP 3: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 72 at IP 72: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 73 at IP 73: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 74 at IP 74: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 75 at IP 75: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 76 at IP 76: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 77 at IP 77: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) input: storage_id=54, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 78 at IP 78: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 79 at IP 79: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 347 at IP 347: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 348 at IP 348: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 349 at IP 349: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=55, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 350 at IP 350: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 351 at IP 351: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 352 at IP 352: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 353 at IP 353: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 354 at IP 354: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 355 at IP 355: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 356 at IP 356: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 357 at IP 357: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) lin: storage_id=58, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 358 at IP 358: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 359 at IP 359: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 360 at IP 360: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_66: storage_id=59, value=types.types.TokenLiteral{ .string = { 52, 32, 43, 32, 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 361 at IP 361: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 362 at IP 362: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_66: storage_id=60, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 363 at IP 363: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 364 at IP 364: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) i: storage_id=61, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_75
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 386 (label: then_75)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 386 at IP 386: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 387 at IP 387: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 388 at IP 388: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 389 at IP 389: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 390 at IP 390: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 391 at IP 391: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 392 at IP 392: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 393 at IP 393: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = {  } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 394 at IP 394: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 395 at IP 395: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_78
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 421 (label: then_78)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 421 at IP 421: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 422 at IP 422: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 423 at IP 423: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 424 at IP 424: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 425 at IP 425: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_79
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 436 (label: else_79)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 436 at IP 436: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 437 at IP 437: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 438 at IP 438: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 439 at IP 439: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 440 at IP 440: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 441 at IP 441: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 442 at IP 442: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 443 at IP 443: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 444 at IP 444: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 445 at IP 445: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 32 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings ' ' and ' ', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_72
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 381 (label: then_72)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 381 at IP 381: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 382 at IP 382: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 383 at IP 383: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 384 at IP 384: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '' and '', lengths: 0 and 0, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 385 at IP 385: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_73
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 396 (label: else_73)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 396 at IP 396: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 397 at IP 397: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 398 at IP 398: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 399 at IP 399: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 4 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 4 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_67
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 370 (label: foreach_body_67)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 370 at IP 370: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 371 at IP 371: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 372 at IP 372: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 373 at IP 373: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 374 at IP 374: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 375 at IP 375: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) c: storage_id=62, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 376 at IP 376: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 377 at IP 377: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 378 at IP 378: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 379 at IP 379: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 380 at IP 380: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_70
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 400 (label: else_70)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 400 at IP 400: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 401 at IP 401: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 402 at IP 402: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 403 at IP 403: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 404 at IP 404: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 405 at IP 405: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 406 at IP 406: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 407 at IP 407: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 408 at IP 408: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 409 at IP 409: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 410 at IP 410: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 411 at IP 411: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 412 at IP 412: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 413 at IP 413: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 414 at IP 414: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 415 at IP 415: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 416 at IP 416: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 417 at IP 417: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 418 at IP 418: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 419 at IP 419: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 420 at IP 420: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_76
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 446 (label: else_76)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 446 at IP 446: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 447 at IP 447: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 448 at IP 448: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 449 at IP 449: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 450 at IP 450: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 451 at IP 451: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=and_end_83
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 461 (label: and_end_83)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 461 at IP 461: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 462 at IP 462: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_84
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 488 (label: else_84)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 488 at IP 488: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 489 at IP 489: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 490 at IP 490: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 491 at IP 491: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 32 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ' ', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 492 at IP 492: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_92
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 493 (label: then_92)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 493 at IP 493: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 494 at IP 494: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 495 at IP 495: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 496 at IP 496: Swap
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 497 at IP 497: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 498 at IP 498: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 499 at IP 499: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) current: storage_id=57, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 500 at IP 500: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 501 at IP 501: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 504 at IP 504: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 505 at IP 505: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 506 at IP 506: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 507 at IP 507: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 508 at IP 508: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 509 at IP 509: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 510 at IP 510: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 511 at IP 511: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 512 at IP 512: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 513 at IP 513: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) i: storage_id=61, value=types.types.TokenLiteral{ .int = 5 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 514 at IP 514: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 365 at IP 365: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 366 at IP 366: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 367 at IP 367: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 368 at IP 368: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 5 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 369 at IP 369: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_69
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 515 (label: foreach_end_69)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 515 at IP 515: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 516 at IP 516: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 517 at IP 517: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 518 at IP 518: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 519 at IP 519: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 520 at IP 520: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 521 at IP 521: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) result: storage_id=56, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 522 at IP 522: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 523 at IP 523: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 80 at IP 80: StoreConst
[Debug][Hint] interpreter/vm.zig:1105:0: DBG WRITE StoreConst (create) splitInput: storage_id=63, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 81 at IP 81: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 82 at IP 82: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 525 at IP 525: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 526 at IP 526: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 527 at IP 527: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=64, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 528 at IP 528: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 529 at IP 529: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 530 at IP 530: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) depth: storage_id=65, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 531 at IP 531: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 532 at IP 532: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) passed: storage_id=66, value=types.types.TokenLiteral{ .tetra = types.types.Tetra.true }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 533 at IP 533: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 534 at IP 534: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 535 at IP 535: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_94: storage_id=67, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 536 at IP 536: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 537 at IP 537: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_94: storage_id=68, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 538 at IP 538: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 539 at IP 539: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 2 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 2 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_95
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 545 (label: foreach_body_95)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 545 at IP 545: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 546 at IP 546: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 547 at IP 547: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 548 at IP 548: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 549 at IP 549: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) s: storage_id=70, value=types.types.TokenLiteral{ .string = { 53 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 550 at IP 550: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 551 at IP 551: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 552 at IP 552: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 553 at IP 553: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 554 at IP 554: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_98
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 561 (label: else_98)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 561 at IP 561: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 562 at IP 562: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 563 at IP 563: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 564 at IP 564: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 565 at IP 565: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 566 at IP 566: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 53 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '5' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 567 at IP 567: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_101
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 574 (label: else_101)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 574 at IP 574: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 575 at IP 575: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 576 at IP 576: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 577 at IP 577: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 578 at IP 578: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 579 at IP 579: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 580 at IP 580: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_104
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 587 (label: else_104)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 587 at IP 587: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 588 at IP 588: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 589 at IP 589: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 590 at IP 590: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 591 at IP 591: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 592 at IP 592: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 593 at IP 593: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 594 at IP 594: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 595 at IP 595: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_94: storage_id=69, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 596 at IP 596: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 540 at IP 540: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 541 at IP 541: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 542 at IP 542: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 543 at IP 543: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 544 at IP 544: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=foreach_end_97
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 597 (label: foreach_end_97)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 597 at IP 597: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 598 at IP 598: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 599 at IP 599: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 600 at IP 600: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 601 at IP 601: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Gt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Gt = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 602 at IP 602: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_107
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 609 (label: else_107)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 609 at IP 609: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 610 at IP 610: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 611 at IP 611: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 612 at IP 612: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 613 at IP 613: Return
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 83 at IP 83: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=assert_success_23
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 87 (label: assert_success_23)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 87 at IP 87: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 88 at IP 88: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 89 at IP 89: Call
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 615 at IP 615: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 616 at IP 616: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 617 at IP 617: StoreVar
[Debug][Hint] interpreter/vm.zig:982:0: DBG WRITE StoreVar (shadow create) input: storage_id=71, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 618 at IP 618: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 619 at IP 619: ArrayNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 620 at IP 620: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 621 at IP 621: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 622 at IP 622: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 623 at IP 623: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_arr_foreach_start_111: storage_id=73, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .string = { ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 624 at IP 624: StringOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 625 at IP 625: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_len_foreach_start_111: storage_id=74, value=types.types.TokenLiteral{ .int = 3 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 626 at IP 626: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 627 at IP 627: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 0 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 0 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:1008:0: DBG WRITE StoreVar (local create) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 52 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '+', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 642 at IP 642: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 643 at IP 643: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 644 at IP 644: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 45 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '-', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 645 at IP 645: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 646 at IP 646: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 647 at IP 647: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 648 at IP 648: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 42 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '*', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 649 at IP 649: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 650 at IP 650: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 651 at IP 651: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 652 at IP 652: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 47 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '/', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 653 at IP 653: LogicalOp
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 654 at IP 654: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_115
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 667 (label: else_115)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 667 at IP 667: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 668 at IP 668: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 669 at IP 669: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 670 at IP 670: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 40 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '(', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 671 at IP 671: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_118
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 684 (label: else_118)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 684 at IP 684: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 685 at IP 685: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 686 at IP 686: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 687 at IP 687: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 41 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and ')', lengths: 1 and 1, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = false
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 688 at IP 688: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 0 }, should_jump=false, target_label=else_121
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 701 (label: else_121)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 701 at IP 701: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 702 at IP 702: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 703 at IP 703: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 704 at IP 704: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Ne: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 52 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = {  } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '4' and '', lengths: 1 and 0, result: false
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Ne = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 705 at IP 705: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=then_126
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 706 (label: then_126)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 706 at IP 706: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 707 at IP 707: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 708 at IP 708: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 709 at IP 709: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 710 at IP 710: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 711 at IP 711: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 712 at IP 712: StructNew
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 713 at IP 713: ArrayPush
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 714 at IP 714: Dup
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 715 at IP 715: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) tokens: storage_id=72, value=types.types.TokenLiteral{ .array = { types.types.TokenLiteral{ .struct_value = types.types.TokenLiteral__struct_24599{ ... } }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void }, types.types.TokenLiteral{ .nothing = void } } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 716 at IP 716: Pop
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 717 at IP 717: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 720 at IP 720: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 721 at IP 721: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 722 at IP 722: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 723 at IP 723: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 724 at IP 724: ExitScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 725 at IP 725: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 726 at IP 726: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 727 at IP 727: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 728 at IP 728: Arith
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 729 at IP 729: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) __fe_idx_foreach_start_111: storage_id=75, value=types.types.TokenLiteral{ .int = 1 }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 730 at IP 730: Jump
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 628 at IP 628: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 629 at IP 629: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 630 at IP 630: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 631 at IP 631: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Lt: a=int (value: codegen.hir.soxa_values.HIRValue{ .int = 1 }), b=int (value: codegen.hir.soxa_values.HIRValue{ .int = 3 }), operand_type=Int
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Lt = true
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 632 at IP 632: JumpCond
[Debug][Hint] interpreter/vm.zig:1365:0: DBG JumpCond: condition=codegen.hir.soxa_values.HIRValue{ .tetra = 1 }, should_jump=true, target_label=foreach_body_112
[Debug][Hint] interpreter/vm.zig:1370:0: DBG JumpCond: jumping to IP 633 (label: foreach_body_112)
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 633 at IP 633: Label
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 634 at IP 634: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 635 at IP 635: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 636 at IP 636: ArrayGet
[Debug][Hint] interpreter/vm.zig:2018:0: ArrayGet: array element_type=String, retrieved element type=string
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 637 at IP 637: StoreVar
[Debug][Hint] interpreter/vm.zig:993:0: DBG WRITE StoreVar (local update) token: storage_id=76, value=types.types.TokenLiteral{ .string = { 43 } }
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 638 at IP 638: EnterScope
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 639 at IP 639: LoadVar
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 640 at IP 640: Const
[Debug][Hint] interpreter/vm.zig:738:0: DBG VM: executing instruction 641 at IP 641: Compare
[Debug][Hint] interpreter/vm.zig:1302:0: DBG Compare Eq: a=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), b=string (value: codegen.hir.soxa_values.HIRValue{ .string = { 43 } }), operand_type=String
[Debug][Hint] interpreter/vm.zig:3449:0: DBG compareEqual: comparing strings '+' and '+', lengths: 1 and 1, result: true
[Debug][Hint] interpreter/vm.zig:1314:0: DBG Compare result: Eq = true
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:56: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:56: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:56: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:75:56: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:76:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:77:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1014] ./test/examples/calculator.doxa:77:52: Type casting 'as' can only be used with union types, got Int
[CompileTime][Error][E1003] ./test/examples/calculator.doxa:79:30: Type mismatch: expected Int, got Nothing
[CompileTime][Error][E2004] ./test.doxa:1:11: equals sign '=' is not used for variable declarations, use 'is' instead
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
[CompileTime][Error][E1001] ./test/examples/calculator.doxa:73:35: Undefined variable
[CompileTime][Error][E1001] ./test/examples/calculator.doxa:73:35: Undefined variable
[Runtime][Error][E1001] Undefined variable: float_value
[CompileTime][Error][E2021] ./test/examples/calculator.doxa:64:32: Expected then
[CompileTime][Error][E1003] ./test/misc/bigfile.doxa:392:1: Type mismatch: expected Int, got Union
